begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|generic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
specifier|public
class|class
name|CountVisitor
implements|implements
name|Visitor
block|{
specifier|private
name|int
name|aaload
decl_stmt|;
specifier|private
name|int
name|aastore
decl_stmt|;
specifier|private
name|int
name|aconstNull
decl_stmt|;
specifier|private
name|int
name|allocationInstruction
decl_stmt|;
specifier|private
name|int
name|aload
decl_stmt|;
specifier|private
name|int
name|anewarray
decl_stmt|;
specifier|private
name|int
name|areturn
decl_stmt|;
specifier|private
name|int
name|arithmeticInstruction
decl_stmt|;
specifier|private
name|int
name|arrayInstruction
decl_stmt|;
specifier|private
name|int
name|arraylength
decl_stmt|;
specifier|private
name|int
name|astore
decl_stmt|;
specifier|private
name|int
name|athrow
decl_stmt|;
specifier|private
name|int
name|baload
decl_stmt|;
specifier|private
name|int
name|bastore
decl_stmt|;
specifier|private
name|int
name|bipush
decl_stmt|;
specifier|private
name|int
name|branchInstruction
decl_stmt|;
specifier|private
name|int
name|breakpoint
decl_stmt|;
specifier|private
name|int
name|caload
decl_stmt|;
specifier|private
name|int
name|castore
decl_stmt|;
specifier|private
name|int
name|checkcast
decl_stmt|;
specifier|private
name|int
name|constantPushInstruction
decl_stmt|;
specifier|private
name|int
name|conversionInstruction
decl_stmt|;
specifier|private
name|int
name|cpInstruction
decl_stmt|;
specifier|private
name|int
name|d2F
decl_stmt|;
specifier|private
name|int
name|d2I
decl_stmt|;
specifier|private
name|int
name|d2L
decl_stmt|;
specifier|private
name|int
name|dadd
decl_stmt|;
specifier|private
name|int
name|daload
decl_stmt|;
specifier|private
name|int
name|dastore
decl_stmt|;
specifier|private
name|int
name|dcmpg
decl_stmt|;
specifier|private
name|int
name|dcmpl
decl_stmt|;
specifier|private
name|int
name|dconst
decl_stmt|;
specifier|private
name|int
name|ddiv
decl_stmt|;
specifier|private
name|int
name|dload
decl_stmt|;
specifier|private
name|int
name|dmul
decl_stmt|;
specifier|private
name|int
name|dneg
decl_stmt|;
specifier|private
name|int
name|drem
decl_stmt|;
specifier|private
name|int
name|dreturn
decl_stmt|;
specifier|private
name|int
name|dstore
decl_stmt|;
specifier|private
name|int
name|dsub
decl_stmt|;
specifier|private
name|int
name|dup
decl_stmt|;
specifier|private
name|int
name|dupX1
decl_stmt|;
specifier|private
name|int
name|dupX2
decl_stmt|;
specifier|private
name|int
name|dup2
decl_stmt|;
specifier|private
name|int
name|dup2X1
decl_stmt|;
specifier|private
name|int
name|dup2X2
decl_stmt|;
specifier|private
name|int
name|exceptionThrower
decl_stmt|;
specifier|private
name|int
name|f2D
decl_stmt|;
specifier|private
name|int
name|f2I
decl_stmt|;
specifier|private
name|int
name|f2L
decl_stmt|;
specifier|private
name|int
name|fadd
decl_stmt|;
specifier|private
name|int
name|faload
decl_stmt|;
specifier|private
name|int
name|fastore
decl_stmt|;
specifier|private
name|int
name|fcmpg
decl_stmt|;
specifier|private
name|int
name|fcmpl
decl_stmt|;
specifier|private
name|int
name|fconst
decl_stmt|;
specifier|private
name|int
name|fdiv
decl_stmt|;
specifier|private
name|int
name|fieldInstruction
decl_stmt|;
specifier|private
name|int
name|fieldOrMethod
decl_stmt|;
specifier|private
name|int
name|fload
decl_stmt|;
specifier|private
name|int
name|fmul
decl_stmt|;
specifier|private
name|int
name|fneg
decl_stmt|;
specifier|private
name|int
name|frem
decl_stmt|;
specifier|private
name|int
name|freturn
decl_stmt|;
specifier|private
name|int
name|fstore
decl_stmt|;
specifier|private
name|int
name|fsub
decl_stmt|;
specifier|private
name|int
name|getfield
decl_stmt|;
specifier|private
name|int
name|getstatic
decl_stmt|;
comment|// TBC
specifier|private
name|int
name|goTo
decl_stmt|;
specifier|private
name|int
name|gotoW
decl_stmt|;
specifier|private
name|int
name|gotoInstruction
decl_stmt|;
specifier|private
name|int
name|i2B
decl_stmt|;
specifier|private
name|int
name|i2C
decl_stmt|;
specifier|private
name|int
name|i2D
decl_stmt|;
specifier|private
name|int
name|i2F
decl_stmt|;
specifier|private
name|int
name|i2L
decl_stmt|;
specifier|private
name|int
name|i2S
decl_stmt|;
specifier|private
name|int
name|iadd
decl_stmt|;
specifier|private
name|int
name|iaload
decl_stmt|;
specifier|private
name|int
name|iand
decl_stmt|;
specifier|private
name|int
name|iastore
decl_stmt|;
specifier|private
name|int
name|iconst
decl_stmt|;
specifier|private
name|int
name|idiv
decl_stmt|;
specifier|private
name|int
name|ifAcmpeq
decl_stmt|;
specifier|private
name|int
name|ifAcmpne
decl_stmt|;
specifier|private
name|int
name|ifIcmpeq
decl_stmt|;
specifier|private
name|int
name|ifIcmpge
decl_stmt|;
specifier|private
name|int
name|ifIcmpgt
decl_stmt|;
specifier|private
name|int
name|ifIcmple
decl_stmt|;
specifier|private
name|int
name|ifIcmplt
decl_stmt|;
specifier|private
name|int
name|ifIcmpne
decl_stmt|;
specifier|private
name|int
name|ifeq
decl_stmt|;
specifier|private
name|int
name|ifge
decl_stmt|;
specifier|private
name|int
name|ifgt
decl_stmt|;
specifier|private
name|int
name|ifInstruction
decl_stmt|;
specifier|private
name|int
name|ifle
decl_stmt|;
specifier|private
name|int
name|iflt
decl_stmt|;
specifier|private
name|int
name|ifne
decl_stmt|;
specifier|private
name|int
name|ifnonnull
decl_stmt|;
specifier|private
name|int
name|ifnull
decl_stmt|;
specifier|private
name|int
name|iinc
decl_stmt|;
specifier|private
name|int
name|iload
decl_stmt|;
specifier|private
name|int
name|impdep1
decl_stmt|;
specifier|private
name|int
name|impdep2
decl_stmt|;
specifier|private
name|int
name|imul
decl_stmt|;
specifier|private
name|int
name|ineg
decl_stmt|;
specifier|private
name|int
name|instanceOf
decl_stmt|;
specifier|private
name|int
name|invokedynamic
decl_stmt|;
specifier|private
name|int
name|invokeInstruction
decl_stmt|;
specifier|private
name|int
name|invokeinterface
decl_stmt|;
specifier|private
name|int
name|invokespecial
decl_stmt|;
specifier|private
name|int
name|invokestatic
decl_stmt|;
specifier|private
name|int
name|invokevirtual
decl_stmt|;
specifier|private
name|int
name|ior
decl_stmt|;
specifier|private
name|int
name|irem
decl_stmt|;
specifier|private
name|int
name|ireturn
decl_stmt|;
specifier|private
name|int
name|ishl
decl_stmt|;
specifier|private
name|int
name|ishr
decl_stmt|;
specifier|private
name|int
name|istore
decl_stmt|;
specifier|private
name|int
name|isub
decl_stmt|;
specifier|private
name|int
name|iushr
decl_stmt|;
specifier|private
name|int
name|ixor
decl_stmt|;
specifier|private
name|int
name|jsr
decl_stmt|;
specifier|private
name|int
name|jsrW
decl_stmt|;
specifier|private
name|int
name|jsrInstruction
decl_stmt|;
specifier|private
name|int
name|l2D
decl_stmt|;
specifier|private
name|int
name|l2F
decl_stmt|;
specifier|private
name|int
name|l2I
decl_stmt|;
specifier|private
name|int
name|ladd
decl_stmt|;
specifier|private
name|int
name|laload
decl_stmt|;
specifier|private
name|int
name|land
decl_stmt|;
specifier|private
name|int
name|lastore
decl_stmt|;
specifier|private
name|int
name|lcmp
decl_stmt|;
specifier|private
name|int
name|lconst
decl_stmt|;
specifier|private
name|int
name|ldc
decl_stmt|;
specifier|private
name|int
name|ldc2W
decl_stmt|;
specifier|private
name|int
name|ldiv
decl_stmt|;
specifier|private
name|int
name|lload
decl_stmt|;
specifier|private
name|int
name|lmul
decl_stmt|;
specifier|private
name|int
name|lneg
decl_stmt|;
specifier|private
name|int
name|loadClass
decl_stmt|;
specifier|private
name|int
name|loadInstruction
decl_stmt|;
specifier|private
name|int
name|localVariableInstruction
decl_stmt|;
specifier|private
name|int
name|lookupswitch
decl_stmt|;
specifier|private
name|int
name|lor
decl_stmt|;
specifier|private
name|int
name|lrem
decl_stmt|;
specifier|private
name|int
name|lreturn
decl_stmt|;
specifier|private
name|int
name|lshl
decl_stmt|;
specifier|private
name|int
name|lshr
decl_stmt|;
specifier|private
name|int
name|lstore
decl_stmt|;
specifier|private
name|int
name|lsub
decl_stmt|;
specifier|private
name|int
name|lushr
decl_stmt|;
specifier|private
name|int
name|lxor
decl_stmt|;
specifier|private
name|int
name|monitorenter
decl_stmt|;
specifier|private
name|int
name|monitorexit
decl_stmt|;
specifier|private
name|int
name|multianewarray
decl_stmt|;
comment|// TBC
specifier|private
name|int
name|nEW
decl_stmt|;
specifier|private
name|int
name|newarray
decl_stmt|;
specifier|private
name|int
name|nop
decl_stmt|;
specifier|private
name|int
name|pop
decl_stmt|;
specifier|private
name|int
name|pop2
decl_stmt|;
specifier|private
name|int
name|popInstruction
decl_stmt|;
specifier|private
name|int
name|pushInstruction
decl_stmt|;
specifier|private
name|int
name|putfield
decl_stmt|;
specifier|private
name|int
name|putstatic
decl_stmt|;
specifier|private
name|int
name|ret
decl_stmt|;
comment|// TBC
specifier|private
name|int
name|rETURN
decl_stmt|;
specifier|private
name|int
name|returnInstruction
decl_stmt|;
specifier|private
name|int
name|saload
decl_stmt|;
specifier|private
name|int
name|sastore
decl_stmt|;
specifier|private
name|int
name|select
decl_stmt|;
specifier|private
name|int
name|sipush
decl_stmt|;
specifier|private
name|int
name|stackConsumer
decl_stmt|;
specifier|private
name|int
name|stackInstruction
decl_stmt|;
specifier|private
name|int
name|stackProducer
decl_stmt|;
specifier|private
name|int
name|storeInstruction
decl_stmt|;
specifier|private
name|int
name|swap
decl_stmt|;
specifier|private
name|int
name|tableswitch
decl_stmt|;
specifier|private
name|int
name|typedInstruction
decl_stmt|;
specifier|private
name|int
name|unconditionalBranch
decl_stmt|;
specifier|private
name|int
name|variableLengthInstruction
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CountVisitor{"
operator|+
literal|"aaload="
operator|+
name|aaload
operator|+
literal|", aastore="
operator|+
name|aastore
operator|+
literal|", aconstNull="
operator|+
name|aconstNull
operator|+
literal|", allocationInstruction="
operator|+
name|allocationInstruction
operator|+
literal|", aload="
operator|+
name|aload
operator|+
literal|", anewarray="
operator|+
name|anewarray
operator|+
literal|", areturn="
operator|+
name|areturn
operator|+
literal|", arithmeticInstruction="
operator|+
name|arithmeticInstruction
operator|+
literal|", arrayInstruction="
operator|+
name|arrayInstruction
operator|+
literal|", arraylength="
operator|+
name|arraylength
operator|+
literal|", astore="
operator|+
name|astore
operator|+
literal|", athrow="
operator|+
name|athrow
operator|+
literal|", baload="
operator|+
name|baload
operator|+
literal|", bastore="
operator|+
name|bastore
operator|+
literal|", bipush="
operator|+
name|bipush
operator|+
literal|", branchInstruction="
operator|+
name|branchInstruction
operator|+
literal|", breakpoint="
operator|+
name|breakpoint
operator|+
literal|", caload="
operator|+
name|caload
operator|+
literal|", castore="
operator|+
name|castore
operator|+
literal|", checkcast="
operator|+
name|checkcast
operator|+
literal|", constantPushInstruction="
operator|+
name|constantPushInstruction
operator|+
literal|", conversionInstruction="
operator|+
name|conversionInstruction
operator|+
literal|", cpInstruction="
operator|+
name|cpInstruction
operator|+
literal|", d2F="
operator|+
name|d2F
operator|+
literal|", d2I="
operator|+
name|d2I
operator|+
literal|", d2L="
operator|+
name|d2L
operator|+
literal|", dadd="
operator|+
name|dadd
operator|+
literal|", daload="
operator|+
name|daload
operator|+
literal|", dastore="
operator|+
name|dastore
operator|+
literal|", dcmpg="
operator|+
name|dcmpg
operator|+
literal|", dcmpl="
operator|+
name|dcmpl
operator|+
literal|", dconst="
operator|+
name|dconst
operator|+
literal|", ddiv="
operator|+
name|ddiv
operator|+
literal|", dload="
operator|+
name|dload
operator|+
literal|", dmul="
operator|+
name|dmul
operator|+
literal|", dneg="
operator|+
name|dneg
operator|+
literal|", drem="
operator|+
name|drem
operator|+
literal|", dreturn="
operator|+
name|dreturn
operator|+
literal|", dstore="
operator|+
name|dstore
operator|+
literal|", dsub="
operator|+
name|dsub
operator|+
literal|", dup="
operator|+
name|dup
operator|+
literal|", dupX1="
operator|+
name|dupX1
operator|+
literal|", dupX2="
operator|+
name|dupX2
operator|+
literal|", dup2="
operator|+
name|dup2
operator|+
literal|", dup2X1="
operator|+
name|dup2X1
operator|+
literal|", dup2X2="
operator|+
name|dup2X2
operator|+
literal|", exceptionThrower="
operator|+
name|exceptionThrower
operator|+
literal|", f2D="
operator|+
name|f2D
operator|+
literal|", f2I="
operator|+
name|f2I
operator|+
literal|", f2L="
operator|+
name|f2L
operator|+
literal|", fadd="
operator|+
name|fadd
operator|+
literal|", faload="
operator|+
name|faload
operator|+
literal|", fastore="
operator|+
name|fastore
operator|+
literal|", fcmpg="
operator|+
name|fcmpg
operator|+
literal|", fcmpl="
operator|+
name|fcmpl
operator|+
literal|", fconst="
operator|+
name|fconst
operator|+
literal|", fdiv="
operator|+
name|fdiv
operator|+
literal|", fieldInstruction="
operator|+
name|fieldInstruction
operator|+
literal|", fieldOrMethod="
operator|+
name|fieldOrMethod
operator|+
literal|", fload="
operator|+
name|fload
operator|+
literal|", fmul="
operator|+
name|fmul
operator|+
literal|", fneg="
operator|+
name|fneg
operator|+
literal|", frem="
operator|+
name|frem
operator|+
literal|", freturn="
operator|+
name|freturn
operator|+
literal|", fstore="
operator|+
name|fstore
operator|+
literal|", fsub="
operator|+
name|fsub
operator|+
literal|", getfield="
operator|+
name|getfield
operator|+
literal|", getstatic="
operator|+
name|getstatic
operator|+
literal|", goTo="
operator|+
name|goTo
operator|+
literal|", gotoW="
operator|+
name|gotoW
operator|+
literal|", gotoInstruction="
operator|+
name|gotoInstruction
operator|+
literal|", i2B="
operator|+
name|i2B
operator|+
literal|", i2C="
operator|+
name|i2C
operator|+
literal|", i2D="
operator|+
name|i2D
operator|+
literal|", i2F="
operator|+
name|i2F
operator|+
literal|", i2L="
operator|+
name|i2L
operator|+
literal|", i2S="
operator|+
name|i2S
operator|+
literal|", iadd="
operator|+
name|iadd
operator|+
literal|", iaload="
operator|+
name|iaload
operator|+
literal|", iand="
operator|+
name|iand
operator|+
literal|", iastore="
operator|+
name|iastore
operator|+
literal|", iconst="
operator|+
name|iconst
operator|+
literal|", idiv="
operator|+
name|idiv
operator|+
literal|", ifAcmpeq="
operator|+
name|ifAcmpeq
operator|+
literal|", ifAcmpne="
operator|+
name|ifAcmpne
operator|+
literal|", ifIcmpeq="
operator|+
name|ifIcmpeq
operator|+
literal|", ifIcmpge="
operator|+
name|ifIcmpge
operator|+
literal|", ifIcmpgt="
operator|+
name|ifIcmpgt
operator|+
literal|", ifIcmple="
operator|+
name|ifIcmple
operator|+
literal|", ifIcmplt="
operator|+
name|ifIcmplt
operator|+
literal|", ifIcmpne="
operator|+
name|ifIcmpne
operator|+
literal|", ifeq="
operator|+
name|ifeq
operator|+
literal|", ifge="
operator|+
name|ifge
operator|+
literal|", ifgt="
operator|+
name|ifgt
operator|+
literal|", ifInstruction="
operator|+
name|ifInstruction
operator|+
literal|", ifle="
operator|+
name|ifle
operator|+
literal|", iflt="
operator|+
name|iflt
operator|+
literal|", ifne="
operator|+
name|ifne
operator|+
literal|", ifnonnull="
operator|+
name|ifnonnull
operator|+
literal|", ifnull="
operator|+
name|ifnull
operator|+
literal|", iinc="
operator|+
name|iinc
operator|+
literal|", iload="
operator|+
name|iload
operator|+
literal|", impdep1="
operator|+
name|impdep1
operator|+
literal|", impdep2="
operator|+
name|impdep2
operator|+
literal|", imul="
operator|+
name|imul
operator|+
literal|", ineg="
operator|+
name|ineg
operator|+
literal|", instanceOf="
operator|+
name|instanceOf
operator|+
literal|", invokedynamic="
operator|+
name|invokedynamic
operator|+
literal|", invokeInstruction="
operator|+
name|invokeInstruction
operator|+
literal|", invokeinterface="
operator|+
name|invokeinterface
operator|+
literal|", invokespecial="
operator|+
name|invokespecial
operator|+
literal|", invokestatic="
operator|+
name|invokestatic
operator|+
literal|", invokevirtual="
operator|+
name|invokevirtual
operator|+
literal|", ior="
operator|+
name|ior
operator|+
literal|", irem="
operator|+
name|irem
operator|+
literal|", ireturn="
operator|+
name|ireturn
operator|+
literal|", ishl="
operator|+
name|ishl
operator|+
literal|", ishr="
operator|+
name|ishr
operator|+
literal|", istore="
operator|+
name|istore
operator|+
literal|", isub="
operator|+
name|isub
operator|+
literal|", iushr="
operator|+
name|iushr
operator|+
literal|", ixor="
operator|+
name|ixor
operator|+
literal|", jsr="
operator|+
name|jsr
operator|+
literal|", jsrW="
operator|+
name|jsrW
operator|+
literal|", jsrInstruction="
operator|+
name|jsrInstruction
operator|+
literal|", l2D="
operator|+
name|l2D
operator|+
literal|", l2F="
operator|+
name|l2F
operator|+
literal|", l2I="
operator|+
name|l2I
operator|+
literal|", ladd="
operator|+
name|ladd
operator|+
literal|", laload="
operator|+
name|laload
operator|+
literal|", land="
operator|+
name|land
operator|+
literal|", lastore="
operator|+
name|lastore
operator|+
literal|", lcmp="
operator|+
name|lcmp
operator|+
literal|", lconst="
operator|+
name|lconst
operator|+
literal|", ldc="
operator|+
name|ldc
operator|+
literal|", ldc2W="
operator|+
name|ldc2W
operator|+
literal|", ldiv="
operator|+
name|ldiv
operator|+
literal|", lload="
operator|+
name|lload
operator|+
literal|", lmul="
operator|+
name|lmul
operator|+
literal|", lneg="
operator|+
name|lneg
operator|+
literal|", loadClass="
operator|+
name|loadClass
operator|+
literal|", loadInstruction="
operator|+
name|loadInstruction
operator|+
literal|", localVariableInstruction="
operator|+
name|localVariableInstruction
operator|+
literal|", lookupswitch="
operator|+
name|lookupswitch
operator|+
literal|", lor="
operator|+
name|lor
operator|+
literal|", lrem="
operator|+
name|lrem
operator|+
literal|", lreturn="
operator|+
name|lreturn
operator|+
literal|", lshl="
operator|+
name|lshl
operator|+
literal|", lshr="
operator|+
name|lshr
operator|+
literal|", lstore="
operator|+
name|lstore
operator|+
literal|", lsub="
operator|+
name|lsub
operator|+
literal|", lushr="
operator|+
name|lushr
operator|+
literal|", lxor="
operator|+
name|lxor
operator|+
literal|", monitorenter="
operator|+
name|monitorenter
operator|+
literal|", monitorexit="
operator|+
name|monitorexit
operator|+
literal|", multianewarray="
operator|+
name|multianewarray
operator|+
literal|", nEW="
operator|+
name|nEW
operator|+
literal|", newarray="
operator|+
name|newarray
operator|+
literal|", nop="
operator|+
name|nop
operator|+
literal|", pop="
operator|+
name|pop
operator|+
literal|", pop2="
operator|+
name|pop2
operator|+
literal|", popInstruction="
operator|+
name|popInstruction
operator|+
literal|", pushInstruction="
operator|+
name|pushInstruction
operator|+
literal|", putfield="
operator|+
name|putfield
operator|+
literal|", putstatic="
operator|+
name|putstatic
operator|+
literal|", ret="
operator|+
name|ret
operator|+
literal|", rETURN="
operator|+
name|rETURN
operator|+
literal|", returnInstruction="
operator|+
name|returnInstruction
operator|+
literal|", saload="
operator|+
name|saload
operator|+
literal|", sastore="
operator|+
name|sastore
operator|+
literal|", select="
operator|+
name|select
operator|+
literal|", sipush="
operator|+
name|sipush
operator|+
literal|", stackConsumer="
operator|+
name|stackConsumer
operator|+
literal|", stackInstruction="
operator|+
name|stackInstruction
operator|+
literal|", stackProducer="
operator|+
name|stackProducer
operator|+
literal|", storeInstruction="
operator|+
name|storeInstruction
operator|+
literal|", swap="
operator|+
name|swap
operator|+
literal|", tableswitch="
operator|+
name|tableswitch
operator|+
literal|", typedInstruction="
operator|+
name|typedInstruction
operator|+
literal|", unconditionalBranch="
operator|+
name|unconditionalBranch
operator|+
literal|", variableLengthInstruction="
operator|+
name|variableLengthInstruction
operator|+
literal|'}'
return|;
block|}
specifier|public
name|int
name|getAaload
parameter_list|()
block|{
return|return
name|aaload
return|;
block|}
specifier|public
name|void
name|setAaload
parameter_list|(
name|int
name|aaload
parameter_list|)
block|{
name|this
operator|.
name|aaload
operator|=
name|aaload
expr_stmt|;
block|}
specifier|public
name|int
name|getAastore
parameter_list|()
block|{
return|return
name|aastore
return|;
block|}
specifier|public
name|void
name|setAastore
parameter_list|(
name|int
name|aastore
parameter_list|)
block|{
name|this
operator|.
name|aastore
operator|=
name|aastore
expr_stmt|;
block|}
specifier|public
name|int
name|getAconstNull
parameter_list|()
block|{
return|return
name|aconstNull
return|;
block|}
specifier|public
name|void
name|setAconstNull
parameter_list|(
name|int
name|aconstNull
parameter_list|)
block|{
name|this
operator|.
name|aconstNull
operator|=
name|aconstNull
expr_stmt|;
block|}
specifier|public
name|int
name|getAllocationInstruction
parameter_list|()
block|{
return|return
name|allocationInstruction
return|;
block|}
specifier|public
name|void
name|setAllocationInstruction
parameter_list|(
name|int
name|allocationInstruction
parameter_list|)
block|{
name|this
operator|.
name|allocationInstruction
operator|=
name|allocationInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getAload
parameter_list|()
block|{
return|return
name|aload
return|;
block|}
specifier|public
name|void
name|setAload
parameter_list|(
name|int
name|aload
parameter_list|)
block|{
name|this
operator|.
name|aload
operator|=
name|aload
expr_stmt|;
block|}
specifier|public
name|int
name|getAnewarray
parameter_list|()
block|{
return|return
name|anewarray
return|;
block|}
specifier|public
name|void
name|setAnewarray
parameter_list|(
name|int
name|anewarray
parameter_list|)
block|{
name|this
operator|.
name|anewarray
operator|=
name|anewarray
expr_stmt|;
block|}
specifier|public
name|int
name|getAreturn
parameter_list|()
block|{
return|return
name|areturn
return|;
block|}
specifier|public
name|void
name|setAreturn
parameter_list|(
name|int
name|areturn
parameter_list|)
block|{
name|this
operator|.
name|areturn
operator|=
name|areturn
expr_stmt|;
block|}
specifier|public
name|int
name|getArithmeticInstruction
parameter_list|()
block|{
return|return
name|arithmeticInstruction
return|;
block|}
specifier|public
name|void
name|setArithmeticInstruction
parameter_list|(
name|int
name|arithmeticInstruction
parameter_list|)
block|{
name|this
operator|.
name|arithmeticInstruction
operator|=
name|arithmeticInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getArrayInstruction
parameter_list|()
block|{
return|return
name|arrayInstruction
return|;
block|}
specifier|public
name|void
name|setArrayInstruction
parameter_list|(
name|int
name|arrayInstruction
parameter_list|)
block|{
name|this
operator|.
name|arrayInstruction
operator|=
name|arrayInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getArraylength
parameter_list|()
block|{
return|return
name|arraylength
return|;
block|}
specifier|public
name|void
name|setArraylength
parameter_list|(
name|int
name|arraylength
parameter_list|)
block|{
name|this
operator|.
name|arraylength
operator|=
name|arraylength
expr_stmt|;
block|}
specifier|public
name|int
name|getAstore
parameter_list|()
block|{
return|return
name|astore
return|;
block|}
specifier|public
name|void
name|setAstore
parameter_list|(
name|int
name|astore
parameter_list|)
block|{
name|this
operator|.
name|astore
operator|=
name|astore
expr_stmt|;
block|}
specifier|public
name|int
name|getAthrow
parameter_list|()
block|{
return|return
name|athrow
return|;
block|}
specifier|public
name|void
name|setAthrow
parameter_list|(
name|int
name|athrow
parameter_list|)
block|{
name|this
operator|.
name|athrow
operator|=
name|athrow
expr_stmt|;
block|}
specifier|public
name|int
name|getBaload
parameter_list|()
block|{
return|return
name|baload
return|;
block|}
specifier|public
name|void
name|setBaload
parameter_list|(
name|int
name|baload
parameter_list|)
block|{
name|this
operator|.
name|baload
operator|=
name|baload
expr_stmt|;
block|}
specifier|public
name|int
name|getBastore
parameter_list|()
block|{
return|return
name|bastore
return|;
block|}
specifier|public
name|void
name|setBastore
parameter_list|(
name|int
name|bastore
parameter_list|)
block|{
name|this
operator|.
name|bastore
operator|=
name|bastore
expr_stmt|;
block|}
specifier|public
name|int
name|getBipush
parameter_list|()
block|{
return|return
name|bipush
return|;
block|}
specifier|public
name|void
name|setBipush
parameter_list|(
name|int
name|bipush
parameter_list|)
block|{
name|this
operator|.
name|bipush
operator|=
name|bipush
expr_stmt|;
block|}
specifier|public
name|int
name|getBranchInstruction
parameter_list|()
block|{
return|return
name|branchInstruction
return|;
block|}
specifier|public
name|void
name|setBranchInstruction
parameter_list|(
name|int
name|branchInstruction
parameter_list|)
block|{
name|this
operator|.
name|branchInstruction
operator|=
name|branchInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getBreakpoint
parameter_list|()
block|{
return|return
name|breakpoint
return|;
block|}
specifier|public
name|void
name|setBreakpoint
parameter_list|(
name|int
name|breakpoint
parameter_list|)
block|{
name|this
operator|.
name|breakpoint
operator|=
name|breakpoint
expr_stmt|;
block|}
specifier|public
name|int
name|getCaload
parameter_list|()
block|{
return|return
name|caload
return|;
block|}
specifier|public
name|void
name|setCaload
parameter_list|(
name|int
name|caload
parameter_list|)
block|{
name|this
operator|.
name|caload
operator|=
name|caload
expr_stmt|;
block|}
specifier|public
name|int
name|getCastore
parameter_list|()
block|{
return|return
name|castore
return|;
block|}
specifier|public
name|void
name|setCastore
parameter_list|(
name|int
name|castore
parameter_list|)
block|{
name|this
operator|.
name|castore
operator|=
name|castore
expr_stmt|;
block|}
specifier|public
name|int
name|getCheckcast
parameter_list|()
block|{
return|return
name|checkcast
return|;
block|}
specifier|public
name|void
name|setCheckcast
parameter_list|(
name|int
name|checkcast
parameter_list|)
block|{
name|this
operator|.
name|checkcast
operator|=
name|checkcast
expr_stmt|;
block|}
specifier|public
name|int
name|getConstantPushInstruction
parameter_list|()
block|{
return|return
name|constantPushInstruction
return|;
block|}
specifier|public
name|void
name|setConstantPushInstruction
parameter_list|(
name|int
name|constantPushInstruction
parameter_list|)
block|{
name|this
operator|.
name|constantPushInstruction
operator|=
name|constantPushInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getConversionInstruction
parameter_list|()
block|{
return|return
name|conversionInstruction
return|;
block|}
specifier|public
name|void
name|setConversionInstruction
parameter_list|(
name|int
name|conversionInstruction
parameter_list|)
block|{
name|this
operator|.
name|conversionInstruction
operator|=
name|conversionInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getCpInstruction
parameter_list|()
block|{
return|return
name|cpInstruction
return|;
block|}
specifier|public
name|void
name|setCpInstruction
parameter_list|(
name|int
name|cpInstruction
parameter_list|)
block|{
name|this
operator|.
name|cpInstruction
operator|=
name|cpInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getD2F
parameter_list|()
block|{
return|return
name|d2F
return|;
block|}
specifier|public
name|void
name|setD2F
parameter_list|(
name|int
name|d2F
parameter_list|)
block|{
name|this
operator|.
name|d2F
operator|=
name|d2F
expr_stmt|;
block|}
specifier|public
name|int
name|getD2I
parameter_list|()
block|{
return|return
name|d2I
return|;
block|}
specifier|public
name|void
name|setD2I
parameter_list|(
name|int
name|d2I
parameter_list|)
block|{
name|this
operator|.
name|d2I
operator|=
name|d2I
expr_stmt|;
block|}
specifier|public
name|int
name|getD2L
parameter_list|()
block|{
return|return
name|d2L
return|;
block|}
specifier|public
name|void
name|setD2L
parameter_list|(
name|int
name|d2L
parameter_list|)
block|{
name|this
operator|.
name|d2L
operator|=
name|d2L
expr_stmt|;
block|}
specifier|public
name|int
name|getDadd
parameter_list|()
block|{
return|return
name|dadd
return|;
block|}
specifier|public
name|void
name|setDadd
parameter_list|(
name|int
name|dadd
parameter_list|)
block|{
name|this
operator|.
name|dadd
operator|=
name|dadd
expr_stmt|;
block|}
specifier|public
name|int
name|getDaload
parameter_list|()
block|{
return|return
name|daload
return|;
block|}
specifier|public
name|void
name|setDaload
parameter_list|(
name|int
name|daload
parameter_list|)
block|{
name|this
operator|.
name|daload
operator|=
name|daload
expr_stmt|;
block|}
specifier|public
name|int
name|getDastore
parameter_list|()
block|{
return|return
name|dastore
return|;
block|}
specifier|public
name|void
name|setDastore
parameter_list|(
name|int
name|dastore
parameter_list|)
block|{
name|this
operator|.
name|dastore
operator|=
name|dastore
expr_stmt|;
block|}
specifier|public
name|int
name|getDcmpg
parameter_list|()
block|{
return|return
name|dcmpg
return|;
block|}
specifier|public
name|void
name|setDcmpg
parameter_list|(
name|int
name|dcmpg
parameter_list|)
block|{
name|this
operator|.
name|dcmpg
operator|=
name|dcmpg
expr_stmt|;
block|}
specifier|public
name|int
name|getDcmpl
parameter_list|()
block|{
return|return
name|dcmpl
return|;
block|}
specifier|public
name|void
name|setDcmpl
parameter_list|(
name|int
name|dcmpl
parameter_list|)
block|{
name|this
operator|.
name|dcmpl
operator|=
name|dcmpl
expr_stmt|;
block|}
specifier|public
name|int
name|getDconst
parameter_list|()
block|{
return|return
name|dconst
return|;
block|}
specifier|public
name|void
name|setDconst
parameter_list|(
name|int
name|dconst
parameter_list|)
block|{
name|this
operator|.
name|dconst
operator|=
name|dconst
expr_stmt|;
block|}
specifier|public
name|int
name|getDdiv
parameter_list|()
block|{
return|return
name|ddiv
return|;
block|}
specifier|public
name|void
name|setDdiv
parameter_list|(
name|int
name|ddiv
parameter_list|)
block|{
name|this
operator|.
name|ddiv
operator|=
name|ddiv
expr_stmt|;
block|}
specifier|public
name|int
name|getDload
parameter_list|()
block|{
return|return
name|dload
return|;
block|}
specifier|public
name|void
name|setDload
parameter_list|(
name|int
name|dload
parameter_list|)
block|{
name|this
operator|.
name|dload
operator|=
name|dload
expr_stmt|;
block|}
specifier|public
name|int
name|getDmul
parameter_list|()
block|{
return|return
name|dmul
return|;
block|}
specifier|public
name|void
name|setDmul
parameter_list|(
name|int
name|dmul
parameter_list|)
block|{
name|this
operator|.
name|dmul
operator|=
name|dmul
expr_stmt|;
block|}
specifier|public
name|int
name|getDneg
parameter_list|()
block|{
return|return
name|dneg
return|;
block|}
specifier|public
name|void
name|setDneg
parameter_list|(
name|int
name|dneg
parameter_list|)
block|{
name|this
operator|.
name|dneg
operator|=
name|dneg
expr_stmt|;
block|}
specifier|public
name|int
name|getDrem
parameter_list|()
block|{
return|return
name|drem
return|;
block|}
specifier|public
name|void
name|setDrem
parameter_list|(
name|int
name|drem
parameter_list|)
block|{
name|this
operator|.
name|drem
operator|=
name|drem
expr_stmt|;
block|}
specifier|public
name|int
name|getDreturn
parameter_list|()
block|{
return|return
name|dreturn
return|;
block|}
specifier|public
name|void
name|setDreturn
parameter_list|(
name|int
name|dreturn
parameter_list|)
block|{
name|this
operator|.
name|dreturn
operator|=
name|dreturn
expr_stmt|;
block|}
specifier|public
name|int
name|getDstore
parameter_list|()
block|{
return|return
name|dstore
return|;
block|}
specifier|public
name|void
name|setDstore
parameter_list|(
name|int
name|dstore
parameter_list|)
block|{
name|this
operator|.
name|dstore
operator|=
name|dstore
expr_stmt|;
block|}
specifier|public
name|int
name|getDsub
parameter_list|()
block|{
return|return
name|dsub
return|;
block|}
specifier|public
name|void
name|setDsub
parameter_list|(
name|int
name|dsub
parameter_list|)
block|{
name|this
operator|.
name|dsub
operator|=
name|dsub
expr_stmt|;
block|}
specifier|public
name|int
name|getDup
parameter_list|()
block|{
return|return
name|dup
return|;
block|}
specifier|public
name|void
name|setDup
parameter_list|(
name|int
name|dup
parameter_list|)
block|{
name|this
operator|.
name|dup
operator|=
name|dup
expr_stmt|;
block|}
specifier|public
name|int
name|getDupX1
parameter_list|()
block|{
return|return
name|dupX1
return|;
block|}
specifier|public
name|void
name|setDupX1
parameter_list|(
name|int
name|dupX1
parameter_list|)
block|{
name|this
operator|.
name|dupX1
operator|=
name|dupX1
expr_stmt|;
block|}
specifier|public
name|int
name|getDupX2
parameter_list|()
block|{
return|return
name|dupX2
return|;
block|}
specifier|public
name|void
name|setDupX2
parameter_list|(
name|int
name|dupX2
parameter_list|)
block|{
name|this
operator|.
name|dupX2
operator|=
name|dupX2
expr_stmt|;
block|}
specifier|public
name|int
name|getDup2
parameter_list|()
block|{
return|return
name|dup2
return|;
block|}
specifier|public
name|void
name|setDup2
parameter_list|(
name|int
name|dup2
parameter_list|)
block|{
name|this
operator|.
name|dup2
operator|=
name|dup2
expr_stmt|;
block|}
specifier|public
name|int
name|getDup2X1
parameter_list|()
block|{
return|return
name|dup2X1
return|;
block|}
specifier|public
name|void
name|setDup2X1
parameter_list|(
name|int
name|dup2X1
parameter_list|)
block|{
name|this
operator|.
name|dup2X1
operator|=
name|dup2X1
expr_stmt|;
block|}
specifier|public
name|int
name|getDup2X2
parameter_list|()
block|{
return|return
name|dup2X2
return|;
block|}
specifier|public
name|void
name|setDup2X2
parameter_list|(
name|int
name|dup2X2
parameter_list|)
block|{
name|this
operator|.
name|dup2X2
operator|=
name|dup2X2
expr_stmt|;
block|}
specifier|public
name|int
name|getExceptionThrower
parameter_list|()
block|{
return|return
name|exceptionThrower
return|;
block|}
specifier|public
name|void
name|setExceptionThrower
parameter_list|(
name|int
name|exceptionThrower
parameter_list|)
block|{
name|this
operator|.
name|exceptionThrower
operator|=
name|exceptionThrower
expr_stmt|;
block|}
specifier|public
name|int
name|getF2D
parameter_list|()
block|{
return|return
name|f2D
return|;
block|}
specifier|public
name|void
name|setF2D
parameter_list|(
name|int
name|f2D
parameter_list|)
block|{
name|this
operator|.
name|f2D
operator|=
name|f2D
expr_stmt|;
block|}
specifier|public
name|int
name|getF2I
parameter_list|()
block|{
return|return
name|f2I
return|;
block|}
specifier|public
name|void
name|setF2I
parameter_list|(
name|int
name|f2I
parameter_list|)
block|{
name|this
operator|.
name|f2I
operator|=
name|f2I
expr_stmt|;
block|}
specifier|public
name|int
name|getF2L
parameter_list|()
block|{
return|return
name|f2L
return|;
block|}
specifier|public
name|void
name|setF2L
parameter_list|(
name|int
name|f2L
parameter_list|)
block|{
name|this
operator|.
name|f2L
operator|=
name|f2L
expr_stmt|;
block|}
specifier|public
name|int
name|getFadd
parameter_list|()
block|{
return|return
name|fadd
return|;
block|}
specifier|public
name|void
name|setFadd
parameter_list|(
name|int
name|fadd
parameter_list|)
block|{
name|this
operator|.
name|fadd
operator|=
name|fadd
expr_stmt|;
block|}
specifier|public
name|int
name|getFaload
parameter_list|()
block|{
return|return
name|faload
return|;
block|}
specifier|public
name|void
name|setFaload
parameter_list|(
name|int
name|faload
parameter_list|)
block|{
name|this
operator|.
name|faload
operator|=
name|faload
expr_stmt|;
block|}
specifier|public
name|int
name|getFastore
parameter_list|()
block|{
return|return
name|fastore
return|;
block|}
specifier|public
name|void
name|setFastore
parameter_list|(
name|int
name|fastore
parameter_list|)
block|{
name|this
operator|.
name|fastore
operator|=
name|fastore
expr_stmt|;
block|}
specifier|public
name|int
name|getFcmpg
parameter_list|()
block|{
return|return
name|fcmpg
return|;
block|}
specifier|public
name|void
name|setFcmpg
parameter_list|(
name|int
name|fcmpg
parameter_list|)
block|{
name|this
operator|.
name|fcmpg
operator|=
name|fcmpg
expr_stmt|;
block|}
specifier|public
name|int
name|getFcmpl
parameter_list|()
block|{
return|return
name|fcmpl
return|;
block|}
specifier|public
name|void
name|setFcmpl
parameter_list|(
name|int
name|fcmpl
parameter_list|)
block|{
name|this
operator|.
name|fcmpl
operator|=
name|fcmpl
expr_stmt|;
block|}
specifier|public
name|int
name|getFconst
parameter_list|()
block|{
return|return
name|fconst
return|;
block|}
specifier|public
name|void
name|setFconst
parameter_list|(
name|int
name|fconst
parameter_list|)
block|{
name|this
operator|.
name|fconst
operator|=
name|fconst
expr_stmt|;
block|}
specifier|public
name|int
name|getFdiv
parameter_list|()
block|{
return|return
name|fdiv
return|;
block|}
specifier|public
name|void
name|setFdiv
parameter_list|(
name|int
name|fdiv
parameter_list|)
block|{
name|this
operator|.
name|fdiv
operator|=
name|fdiv
expr_stmt|;
block|}
specifier|public
name|int
name|getFieldInstruction
parameter_list|()
block|{
return|return
name|fieldInstruction
return|;
block|}
specifier|public
name|void
name|setFieldInstruction
parameter_list|(
name|int
name|fieldInstruction
parameter_list|)
block|{
name|this
operator|.
name|fieldInstruction
operator|=
name|fieldInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getFieldOrMethod
parameter_list|()
block|{
return|return
name|fieldOrMethod
return|;
block|}
specifier|public
name|void
name|setFieldOrMethod
parameter_list|(
name|int
name|fieldOrMethod
parameter_list|)
block|{
name|this
operator|.
name|fieldOrMethod
operator|=
name|fieldOrMethod
expr_stmt|;
block|}
specifier|public
name|int
name|getFload
parameter_list|()
block|{
return|return
name|fload
return|;
block|}
specifier|public
name|void
name|setFload
parameter_list|(
name|int
name|fload
parameter_list|)
block|{
name|this
operator|.
name|fload
operator|=
name|fload
expr_stmt|;
block|}
specifier|public
name|int
name|getFmul
parameter_list|()
block|{
return|return
name|fmul
return|;
block|}
specifier|public
name|void
name|setFmul
parameter_list|(
name|int
name|fmul
parameter_list|)
block|{
name|this
operator|.
name|fmul
operator|=
name|fmul
expr_stmt|;
block|}
specifier|public
name|int
name|getFneg
parameter_list|()
block|{
return|return
name|fneg
return|;
block|}
specifier|public
name|void
name|setFneg
parameter_list|(
name|int
name|fneg
parameter_list|)
block|{
name|this
operator|.
name|fneg
operator|=
name|fneg
expr_stmt|;
block|}
specifier|public
name|int
name|getFrem
parameter_list|()
block|{
return|return
name|frem
return|;
block|}
specifier|public
name|void
name|setFrem
parameter_list|(
name|int
name|frem
parameter_list|)
block|{
name|this
operator|.
name|frem
operator|=
name|frem
expr_stmt|;
block|}
specifier|public
name|int
name|getFreturn
parameter_list|()
block|{
return|return
name|freturn
return|;
block|}
specifier|public
name|void
name|setFreturn
parameter_list|(
name|int
name|freturn
parameter_list|)
block|{
name|this
operator|.
name|freturn
operator|=
name|freturn
expr_stmt|;
block|}
specifier|public
name|int
name|getFstore
parameter_list|()
block|{
return|return
name|fstore
return|;
block|}
specifier|public
name|void
name|setFstore
parameter_list|(
name|int
name|fstore
parameter_list|)
block|{
name|this
operator|.
name|fstore
operator|=
name|fstore
expr_stmt|;
block|}
specifier|public
name|int
name|getFsub
parameter_list|()
block|{
return|return
name|fsub
return|;
block|}
specifier|public
name|void
name|setFsub
parameter_list|(
name|int
name|fsub
parameter_list|)
block|{
name|this
operator|.
name|fsub
operator|=
name|fsub
expr_stmt|;
block|}
specifier|public
name|int
name|getGetfield
parameter_list|()
block|{
return|return
name|getfield
return|;
block|}
specifier|public
name|void
name|setGetfield
parameter_list|(
name|int
name|getfield
parameter_list|)
block|{
name|this
operator|.
name|getfield
operator|=
name|getfield
expr_stmt|;
block|}
specifier|public
name|int
name|getGetstatic
parameter_list|()
block|{
return|return
name|getstatic
return|;
block|}
specifier|public
name|void
name|setGetstatic
parameter_list|(
name|int
name|getstatic
parameter_list|)
block|{
name|this
operator|.
name|getstatic
operator|=
name|getstatic
expr_stmt|;
block|}
specifier|public
name|int
name|getGoTo
parameter_list|()
block|{
return|return
name|goTo
return|;
block|}
specifier|public
name|void
name|setGoTo
parameter_list|(
name|int
name|goTo
parameter_list|)
block|{
name|this
operator|.
name|goTo
operator|=
name|goTo
expr_stmt|;
block|}
specifier|public
name|int
name|getGotoW
parameter_list|()
block|{
return|return
name|gotoW
return|;
block|}
specifier|public
name|void
name|setGotoW
parameter_list|(
name|int
name|gotoW
parameter_list|)
block|{
name|this
operator|.
name|gotoW
operator|=
name|gotoW
expr_stmt|;
block|}
specifier|public
name|int
name|getGotoInstruction
parameter_list|()
block|{
return|return
name|gotoInstruction
return|;
block|}
specifier|public
name|void
name|setGotoInstruction
parameter_list|(
name|int
name|gotoInstruction
parameter_list|)
block|{
name|this
operator|.
name|gotoInstruction
operator|=
name|gotoInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getI2B
parameter_list|()
block|{
return|return
name|i2B
return|;
block|}
specifier|public
name|void
name|setI2B
parameter_list|(
name|int
name|i2B
parameter_list|)
block|{
name|this
operator|.
name|i2B
operator|=
name|i2B
expr_stmt|;
block|}
specifier|public
name|int
name|getI2C
parameter_list|()
block|{
return|return
name|i2C
return|;
block|}
specifier|public
name|void
name|setI2C
parameter_list|(
name|int
name|i2C
parameter_list|)
block|{
name|this
operator|.
name|i2C
operator|=
name|i2C
expr_stmt|;
block|}
specifier|public
name|int
name|getI2D
parameter_list|()
block|{
return|return
name|i2D
return|;
block|}
specifier|public
name|void
name|setI2D
parameter_list|(
name|int
name|i2D
parameter_list|)
block|{
name|this
operator|.
name|i2D
operator|=
name|i2D
expr_stmt|;
block|}
specifier|public
name|int
name|getI2F
parameter_list|()
block|{
return|return
name|i2F
return|;
block|}
specifier|public
name|void
name|setI2F
parameter_list|(
name|int
name|i2F
parameter_list|)
block|{
name|this
operator|.
name|i2F
operator|=
name|i2F
expr_stmt|;
block|}
specifier|public
name|int
name|getI2L
parameter_list|()
block|{
return|return
name|i2L
return|;
block|}
specifier|public
name|void
name|setI2L
parameter_list|(
name|int
name|i2L
parameter_list|)
block|{
name|this
operator|.
name|i2L
operator|=
name|i2L
expr_stmt|;
block|}
specifier|public
name|int
name|getI2S
parameter_list|()
block|{
return|return
name|i2S
return|;
block|}
specifier|public
name|void
name|setI2S
parameter_list|(
name|int
name|i2S
parameter_list|)
block|{
name|this
operator|.
name|i2S
operator|=
name|i2S
expr_stmt|;
block|}
specifier|public
name|int
name|getIadd
parameter_list|()
block|{
return|return
name|iadd
return|;
block|}
specifier|public
name|void
name|setIadd
parameter_list|(
name|int
name|iadd
parameter_list|)
block|{
name|this
operator|.
name|iadd
operator|=
name|iadd
expr_stmt|;
block|}
specifier|public
name|int
name|getIaload
parameter_list|()
block|{
return|return
name|iaload
return|;
block|}
specifier|public
name|void
name|setIaload
parameter_list|(
name|int
name|iaload
parameter_list|)
block|{
name|this
operator|.
name|iaload
operator|=
name|iaload
expr_stmt|;
block|}
specifier|public
name|int
name|getIand
parameter_list|()
block|{
return|return
name|iand
return|;
block|}
specifier|public
name|void
name|setIand
parameter_list|(
name|int
name|iand
parameter_list|)
block|{
name|this
operator|.
name|iand
operator|=
name|iand
expr_stmt|;
block|}
specifier|public
name|int
name|getIastore
parameter_list|()
block|{
return|return
name|iastore
return|;
block|}
specifier|public
name|void
name|setIastore
parameter_list|(
name|int
name|iastore
parameter_list|)
block|{
name|this
operator|.
name|iastore
operator|=
name|iastore
expr_stmt|;
block|}
specifier|public
name|int
name|getIconst
parameter_list|()
block|{
return|return
name|iconst
return|;
block|}
specifier|public
name|void
name|setIconst
parameter_list|(
name|int
name|iconst
parameter_list|)
block|{
name|this
operator|.
name|iconst
operator|=
name|iconst
expr_stmt|;
block|}
specifier|public
name|int
name|getIdiv
parameter_list|()
block|{
return|return
name|idiv
return|;
block|}
specifier|public
name|void
name|setIdiv
parameter_list|(
name|int
name|idiv
parameter_list|)
block|{
name|this
operator|.
name|idiv
operator|=
name|idiv
expr_stmt|;
block|}
specifier|public
name|int
name|getIfAcmpeq
parameter_list|()
block|{
return|return
name|ifAcmpeq
return|;
block|}
specifier|public
name|void
name|setIfAcmpeq
parameter_list|(
name|int
name|ifAcmpeq
parameter_list|)
block|{
name|this
operator|.
name|ifAcmpeq
operator|=
name|ifAcmpeq
expr_stmt|;
block|}
specifier|public
name|int
name|getIfAcmpne
parameter_list|()
block|{
return|return
name|ifAcmpne
return|;
block|}
specifier|public
name|void
name|setIfAcmpne
parameter_list|(
name|int
name|ifAcmpne
parameter_list|)
block|{
name|this
operator|.
name|ifAcmpne
operator|=
name|ifAcmpne
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmpeq
parameter_list|()
block|{
return|return
name|ifIcmpeq
return|;
block|}
specifier|public
name|void
name|setIfIcmpeq
parameter_list|(
name|int
name|ifIcmpeq
parameter_list|)
block|{
name|this
operator|.
name|ifIcmpeq
operator|=
name|ifIcmpeq
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmpge
parameter_list|()
block|{
return|return
name|ifIcmpge
return|;
block|}
specifier|public
name|void
name|setIfIcmpge
parameter_list|(
name|int
name|ifIcmpge
parameter_list|)
block|{
name|this
operator|.
name|ifIcmpge
operator|=
name|ifIcmpge
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmpgt
parameter_list|()
block|{
return|return
name|ifIcmpgt
return|;
block|}
specifier|public
name|void
name|setIfIcmpgt
parameter_list|(
name|int
name|ifIcmpgt
parameter_list|)
block|{
name|this
operator|.
name|ifIcmpgt
operator|=
name|ifIcmpgt
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmple
parameter_list|()
block|{
return|return
name|ifIcmple
return|;
block|}
specifier|public
name|void
name|setIfIcmple
parameter_list|(
name|int
name|ifIcmple
parameter_list|)
block|{
name|this
operator|.
name|ifIcmple
operator|=
name|ifIcmple
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmplt
parameter_list|()
block|{
return|return
name|ifIcmplt
return|;
block|}
specifier|public
name|void
name|setIfIcmplt
parameter_list|(
name|int
name|ifIcmplt
parameter_list|)
block|{
name|this
operator|.
name|ifIcmplt
operator|=
name|ifIcmplt
expr_stmt|;
block|}
specifier|public
name|int
name|getIfIcmpne
parameter_list|()
block|{
return|return
name|ifIcmpne
return|;
block|}
specifier|public
name|void
name|setIfIcmpne
parameter_list|(
name|int
name|ifIcmpne
parameter_list|)
block|{
name|this
operator|.
name|ifIcmpne
operator|=
name|ifIcmpne
expr_stmt|;
block|}
specifier|public
name|int
name|getIfeq
parameter_list|()
block|{
return|return
name|ifeq
return|;
block|}
specifier|public
name|void
name|setIfeq
parameter_list|(
name|int
name|ifeq
parameter_list|)
block|{
name|this
operator|.
name|ifeq
operator|=
name|ifeq
expr_stmt|;
block|}
specifier|public
name|int
name|getIfge
parameter_list|()
block|{
return|return
name|ifge
return|;
block|}
specifier|public
name|void
name|setIfge
parameter_list|(
name|int
name|ifge
parameter_list|)
block|{
name|this
operator|.
name|ifge
operator|=
name|ifge
expr_stmt|;
block|}
specifier|public
name|int
name|getIfgt
parameter_list|()
block|{
return|return
name|ifgt
return|;
block|}
specifier|public
name|void
name|setIfgt
parameter_list|(
name|int
name|ifgt
parameter_list|)
block|{
name|this
operator|.
name|ifgt
operator|=
name|ifgt
expr_stmt|;
block|}
specifier|public
name|int
name|getIfInstruction
parameter_list|()
block|{
return|return
name|ifInstruction
return|;
block|}
specifier|public
name|void
name|setIfInstruction
parameter_list|(
name|int
name|ifInstruction
parameter_list|)
block|{
name|this
operator|.
name|ifInstruction
operator|=
name|ifInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getIfle
parameter_list|()
block|{
return|return
name|ifle
return|;
block|}
specifier|public
name|void
name|setIfle
parameter_list|(
name|int
name|ifle
parameter_list|)
block|{
name|this
operator|.
name|ifle
operator|=
name|ifle
expr_stmt|;
block|}
specifier|public
name|int
name|getIflt
parameter_list|()
block|{
return|return
name|iflt
return|;
block|}
specifier|public
name|void
name|setIflt
parameter_list|(
name|int
name|iflt
parameter_list|)
block|{
name|this
operator|.
name|iflt
operator|=
name|iflt
expr_stmt|;
block|}
specifier|public
name|int
name|getIfne
parameter_list|()
block|{
return|return
name|ifne
return|;
block|}
specifier|public
name|void
name|setIfne
parameter_list|(
name|int
name|ifne
parameter_list|)
block|{
name|this
operator|.
name|ifne
operator|=
name|ifne
expr_stmt|;
block|}
specifier|public
name|int
name|getIfnonnull
parameter_list|()
block|{
return|return
name|ifnonnull
return|;
block|}
specifier|public
name|void
name|setIfnonnull
parameter_list|(
name|int
name|ifnonnull
parameter_list|)
block|{
name|this
operator|.
name|ifnonnull
operator|=
name|ifnonnull
expr_stmt|;
block|}
specifier|public
name|int
name|getIfnull
parameter_list|()
block|{
return|return
name|ifnull
return|;
block|}
specifier|public
name|void
name|setIfnull
parameter_list|(
name|int
name|ifnull
parameter_list|)
block|{
name|this
operator|.
name|ifnull
operator|=
name|ifnull
expr_stmt|;
block|}
specifier|public
name|int
name|getIinc
parameter_list|()
block|{
return|return
name|iinc
return|;
block|}
specifier|public
name|void
name|setIinc
parameter_list|(
name|int
name|iinc
parameter_list|)
block|{
name|this
operator|.
name|iinc
operator|=
name|iinc
expr_stmt|;
block|}
specifier|public
name|int
name|getIload
parameter_list|()
block|{
return|return
name|iload
return|;
block|}
specifier|public
name|void
name|setIload
parameter_list|(
name|int
name|iload
parameter_list|)
block|{
name|this
operator|.
name|iload
operator|=
name|iload
expr_stmt|;
block|}
specifier|public
name|int
name|getImpdep1
parameter_list|()
block|{
return|return
name|impdep1
return|;
block|}
specifier|public
name|void
name|setImpdep1
parameter_list|(
name|int
name|impdep1
parameter_list|)
block|{
name|this
operator|.
name|impdep1
operator|=
name|impdep1
expr_stmt|;
block|}
specifier|public
name|int
name|getImpdep2
parameter_list|()
block|{
return|return
name|impdep2
return|;
block|}
specifier|public
name|void
name|setImpdep2
parameter_list|(
name|int
name|impdep2
parameter_list|)
block|{
name|this
operator|.
name|impdep2
operator|=
name|impdep2
expr_stmt|;
block|}
specifier|public
name|int
name|getImul
parameter_list|()
block|{
return|return
name|imul
return|;
block|}
specifier|public
name|void
name|setImul
parameter_list|(
name|int
name|imul
parameter_list|)
block|{
name|this
operator|.
name|imul
operator|=
name|imul
expr_stmt|;
block|}
specifier|public
name|int
name|getIneg
parameter_list|()
block|{
return|return
name|ineg
return|;
block|}
specifier|public
name|void
name|setIneg
parameter_list|(
name|int
name|ineg
parameter_list|)
block|{
name|this
operator|.
name|ineg
operator|=
name|ineg
expr_stmt|;
block|}
specifier|public
name|int
name|getInstanceOf
parameter_list|()
block|{
return|return
name|instanceOf
return|;
block|}
specifier|public
name|void
name|setInstanceOf
parameter_list|(
name|int
name|instanceOf
parameter_list|)
block|{
name|this
operator|.
name|instanceOf
operator|=
name|instanceOf
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokedynamic
parameter_list|()
block|{
return|return
name|invokedynamic
return|;
block|}
specifier|public
name|void
name|setInvokedynamic
parameter_list|(
name|int
name|invokedynamic
parameter_list|)
block|{
name|this
operator|.
name|invokedynamic
operator|=
name|invokedynamic
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokeInstruction
parameter_list|()
block|{
return|return
name|invokeInstruction
return|;
block|}
specifier|public
name|void
name|setInvokeInstruction
parameter_list|(
name|int
name|invokeInstruction
parameter_list|)
block|{
name|this
operator|.
name|invokeInstruction
operator|=
name|invokeInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokeinterface
parameter_list|()
block|{
return|return
name|invokeinterface
return|;
block|}
specifier|public
name|void
name|setInvokeinterface
parameter_list|(
name|int
name|invokeinterface
parameter_list|)
block|{
name|this
operator|.
name|invokeinterface
operator|=
name|invokeinterface
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokespecial
parameter_list|()
block|{
return|return
name|invokespecial
return|;
block|}
specifier|public
name|void
name|setInvokespecial
parameter_list|(
name|int
name|invokespecial
parameter_list|)
block|{
name|this
operator|.
name|invokespecial
operator|=
name|invokespecial
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokestatic
parameter_list|()
block|{
return|return
name|invokestatic
return|;
block|}
specifier|public
name|void
name|setInvokestatic
parameter_list|(
name|int
name|invokestatic
parameter_list|)
block|{
name|this
operator|.
name|invokestatic
operator|=
name|invokestatic
expr_stmt|;
block|}
specifier|public
name|int
name|getInvokevirtual
parameter_list|()
block|{
return|return
name|invokevirtual
return|;
block|}
specifier|public
name|void
name|setInvokevirtual
parameter_list|(
name|int
name|invokevirtual
parameter_list|)
block|{
name|this
operator|.
name|invokevirtual
operator|=
name|invokevirtual
expr_stmt|;
block|}
specifier|public
name|int
name|getIor
parameter_list|()
block|{
return|return
name|ior
return|;
block|}
specifier|public
name|void
name|setIor
parameter_list|(
name|int
name|ior
parameter_list|)
block|{
name|this
operator|.
name|ior
operator|=
name|ior
expr_stmt|;
block|}
specifier|public
name|int
name|getIrem
parameter_list|()
block|{
return|return
name|irem
return|;
block|}
specifier|public
name|void
name|setIrem
parameter_list|(
name|int
name|irem
parameter_list|)
block|{
name|this
operator|.
name|irem
operator|=
name|irem
expr_stmt|;
block|}
specifier|public
name|int
name|getIreturn
parameter_list|()
block|{
return|return
name|ireturn
return|;
block|}
specifier|public
name|void
name|setIreturn
parameter_list|(
name|int
name|ireturn
parameter_list|)
block|{
name|this
operator|.
name|ireturn
operator|=
name|ireturn
expr_stmt|;
block|}
specifier|public
name|int
name|getIshl
parameter_list|()
block|{
return|return
name|ishl
return|;
block|}
specifier|public
name|void
name|setIshl
parameter_list|(
name|int
name|ishl
parameter_list|)
block|{
name|this
operator|.
name|ishl
operator|=
name|ishl
expr_stmt|;
block|}
specifier|public
name|int
name|getIshr
parameter_list|()
block|{
return|return
name|ishr
return|;
block|}
specifier|public
name|void
name|setIshr
parameter_list|(
name|int
name|ishr
parameter_list|)
block|{
name|this
operator|.
name|ishr
operator|=
name|ishr
expr_stmt|;
block|}
specifier|public
name|int
name|getIstore
parameter_list|()
block|{
return|return
name|istore
return|;
block|}
specifier|public
name|void
name|setIstore
parameter_list|(
name|int
name|istore
parameter_list|)
block|{
name|this
operator|.
name|istore
operator|=
name|istore
expr_stmt|;
block|}
specifier|public
name|int
name|getIsub
parameter_list|()
block|{
return|return
name|isub
return|;
block|}
specifier|public
name|void
name|setIsub
parameter_list|(
name|int
name|isub
parameter_list|)
block|{
name|this
operator|.
name|isub
operator|=
name|isub
expr_stmt|;
block|}
specifier|public
name|int
name|getIushr
parameter_list|()
block|{
return|return
name|iushr
return|;
block|}
specifier|public
name|void
name|setIushr
parameter_list|(
name|int
name|iushr
parameter_list|)
block|{
name|this
operator|.
name|iushr
operator|=
name|iushr
expr_stmt|;
block|}
specifier|public
name|int
name|getIxor
parameter_list|()
block|{
return|return
name|ixor
return|;
block|}
specifier|public
name|void
name|setIxor
parameter_list|(
name|int
name|ixor
parameter_list|)
block|{
name|this
operator|.
name|ixor
operator|=
name|ixor
expr_stmt|;
block|}
specifier|public
name|int
name|getJsr
parameter_list|()
block|{
return|return
name|jsr
return|;
block|}
specifier|public
name|void
name|setJsr
parameter_list|(
name|int
name|jsr
parameter_list|)
block|{
name|this
operator|.
name|jsr
operator|=
name|jsr
expr_stmt|;
block|}
specifier|public
name|int
name|getJsrW
parameter_list|()
block|{
return|return
name|jsrW
return|;
block|}
specifier|public
name|void
name|setJsrW
parameter_list|(
name|int
name|jsrW
parameter_list|)
block|{
name|this
operator|.
name|jsrW
operator|=
name|jsrW
expr_stmt|;
block|}
specifier|public
name|int
name|getJsrInstruction
parameter_list|()
block|{
return|return
name|jsrInstruction
return|;
block|}
specifier|public
name|void
name|setJsrInstruction
parameter_list|(
name|int
name|jsrInstruction
parameter_list|)
block|{
name|this
operator|.
name|jsrInstruction
operator|=
name|jsrInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getL2D
parameter_list|()
block|{
return|return
name|l2D
return|;
block|}
specifier|public
name|void
name|setL2D
parameter_list|(
name|int
name|l2D
parameter_list|)
block|{
name|this
operator|.
name|l2D
operator|=
name|l2D
expr_stmt|;
block|}
specifier|public
name|int
name|getL2F
parameter_list|()
block|{
return|return
name|l2F
return|;
block|}
specifier|public
name|void
name|setL2F
parameter_list|(
name|int
name|l2F
parameter_list|)
block|{
name|this
operator|.
name|l2F
operator|=
name|l2F
expr_stmt|;
block|}
specifier|public
name|int
name|getL2I
parameter_list|()
block|{
return|return
name|l2I
return|;
block|}
specifier|public
name|void
name|setL2I
parameter_list|(
name|int
name|l2I
parameter_list|)
block|{
name|this
operator|.
name|l2I
operator|=
name|l2I
expr_stmt|;
block|}
specifier|public
name|int
name|getLadd
parameter_list|()
block|{
return|return
name|ladd
return|;
block|}
specifier|public
name|void
name|setLadd
parameter_list|(
name|int
name|ladd
parameter_list|)
block|{
name|this
operator|.
name|ladd
operator|=
name|ladd
expr_stmt|;
block|}
specifier|public
name|int
name|getLaload
parameter_list|()
block|{
return|return
name|laload
return|;
block|}
specifier|public
name|void
name|setLaload
parameter_list|(
name|int
name|laload
parameter_list|)
block|{
name|this
operator|.
name|laload
operator|=
name|laload
expr_stmt|;
block|}
specifier|public
name|int
name|getLand
parameter_list|()
block|{
return|return
name|land
return|;
block|}
specifier|public
name|void
name|setLand
parameter_list|(
name|int
name|land
parameter_list|)
block|{
name|this
operator|.
name|land
operator|=
name|land
expr_stmt|;
block|}
specifier|public
name|int
name|getLastore
parameter_list|()
block|{
return|return
name|lastore
return|;
block|}
specifier|public
name|void
name|setLastore
parameter_list|(
name|int
name|lastore
parameter_list|)
block|{
name|this
operator|.
name|lastore
operator|=
name|lastore
expr_stmt|;
block|}
specifier|public
name|int
name|getLcmp
parameter_list|()
block|{
return|return
name|lcmp
return|;
block|}
specifier|public
name|void
name|setLcmp
parameter_list|(
name|int
name|lcmp
parameter_list|)
block|{
name|this
operator|.
name|lcmp
operator|=
name|lcmp
expr_stmt|;
block|}
specifier|public
name|int
name|getLconst
parameter_list|()
block|{
return|return
name|lconst
return|;
block|}
specifier|public
name|void
name|setLconst
parameter_list|(
name|int
name|lconst
parameter_list|)
block|{
name|this
operator|.
name|lconst
operator|=
name|lconst
expr_stmt|;
block|}
specifier|public
name|int
name|getLdc
parameter_list|()
block|{
return|return
name|ldc
return|;
block|}
specifier|public
name|void
name|setLdc
parameter_list|(
name|int
name|ldc
parameter_list|)
block|{
name|this
operator|.
name|ldc
operator|=
name|ldc
expr_stmt|;
block|}
specifier|public
name|int
name|getLdc2W
parameter_list|()
block|{
return|return
name|ldc2W
return|;
block|}
specifier|public
name|void
name|setLdc2W
parameter_list|(
name|int
name|ldc2W
parameter_list|)
block|{
name|this
operator|.
name|ldc2W
operator|=
name|ldc2W
expr_stmt|;
block|}
specifier|public
name|int
name|getLdiv
parameter_list|()
block|{
return|return
name|ldiv
return|;
block|}
specifier|public
name|void
name|setLdiv
parameter_list|(
name|int
name|ldiv
parameter_list|)
block|{
name|this
operator|.
name|ldiv
operator|=
name|ldiv
expr_stmt|;
block|}
specifier|public
name|int
name|getLload
parameter_list|()
block|{
return|return
name|lload
return|;
block|}
specifier|public
name|void
name|setLload
parameter_list|(
name|int
name|lload
parameter_list|)
block|{
name|this
operator|.
name|lload
operator|=
name|lload
expr_stmt|;
block|}
specifier|public
name|int
name|getLmul
parameter_list|()
block|{
return|return
name|lmul
return|;
block|}
specifier|public
name|void
name|setLmul
parameter_list|(
name|int
name|lmul
parameter_list|)
block|{
name|this
operator|.
name|lmul
operator|=
name|lmul
expr_stmt|;
block|}
specifier|public
name|int
name|getLneg
parameter_list|()
block|{
return|return
name|lneg
return|;
block|}
specifier|public
name|void
name|setLneg
parameter_list|(
name|int
name|lneg
parameter_list|)
block|{
name|this
operator|.
name|lneg
operator|=
name|lneg
expr_stmt|;
block|}
specifier|public
name|int
name|getLoadClass
parameter_list|()
block|{
return|return
name|loadClass
return|;
block|}
specifier|public
name|void
name|setLoadClass
parameter_list|(
name|int
name|loadClass
parameter_list|)
block|{
name|this
operator|.
name|loadClass
operator|=
name|loadClass
expr_stmt|;
block|}
specifier|public
name|int
name|getLoadInstruction
parameter_list|()
block|{
return|return
name|loadInstruction
return|;
block|}
specifier|public
name|void
name|setLoadInstruction
parameter_list|(
name|int
name|loadInstruction
parameter_list|)
block|{
name|this
operator|.
name|loadInstruction
operator|=
name|loadInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getLocalVariableInstruction
parameter_list|()
block|{
return|return
name|localVariableInstruction
return|;
block|}
specifier|public
name|void
name|setLocalVariableInstruction
parameter_list|(
name|int
name|localVariableInstruction
parameter_list|)
block|{
name|this
operator|.
name|localVariableInstruction
operator|=
name|localVariableInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getLookupswitch
parameter_list|()
block|{
return|return
name|lookupswitch
return|;
block|}
specifier|public
name|void
name|setLookupswitch
parameter_list|(
name|int
name|lookupswitch
parameter_list|)
block|{
name|this
operator|.
name|lookupswitch
operator|=
name|lookupswitch
expr_stmt|;
block|}
specifier|public
name|int
name|getLor
parameter_list|()
block|{
return|return
name|lor
return|;
block|}
specifier|public
name|void
name|setLor
parameter_list|(
name|int
name|lor
parameter_list|)
block|{
name|this
operator|.
name|lor
operator|=
name|lor
expr_stmt|;
block|}
specifier|public
name|int
name|getLrem
parameter_list|()
block|{
return|return
name|lrem
return|;
block|}
specifier|public
name|void
name|setLrem
parameter_list|(
name|int
name|lrem
parameter_list|)
block|{
name|this
operator|.
name|lrem
operator|=
name|lrem
expr_stmt|;
block|}
specifier|public
name|int
name|getLreturn
parameter_list|()
block|{
return|return
name|lreturn
return|;
block|}
specifier|public
name|void
name|setLreturn
parameter_list|(
name|int
name|lreturn
parameter_list|)
block|{
name|this
operator|.
name|lreturn
operator|=
name|lreturn
expr_stmt|;
block|}
specifier|public
name|int
name|getLshl
parameter_list|()
block|{
return|return
name|lshl
return|;
block|}
specifier|public
name|void
name|setLshl
parameter_list|(
name|int
name|lshl
parameter_list|)
block|{
name|this
operator|.
name|lshl
operator|=
name|lshl
expr_stmt|;
block|}
specifier|public
name|int
name|getLshr
parameter_list|()
block|{
return|return
name|lshr
return|;
block|}
specifier|public
name|void
name|setLshr
parameter_list|(
name|int
name|lshr
parameter_list|)
block|{
name|this
operator|.
name|lshr
operator|=
name|lshr
expr_stmt|;
block|}
specifier|public
name|int
name|getLstore
parameter_list|()
block|{
return|return
name|lstore
return|;
block|}
specifier|public
name|void
name|setLstore
parameter_list|(
name|int
name|lstore
parameter_list|)
block|{
name|this
operator|.
name|lstore
operator|=
name|lstore
expr_stmt|;
block|}
specifier|public
name|int
name|getLsub
parameter_list|()
block|{
return|return
name|lsub
return|;
block|}
specifier|public
name|void
name|setLsub
parameter_list|(
name|int
name|lsub
parameter_list|)
block|{
name|this
operator|.
name|lsub
operator|=
name|lsub
expr_stmt|;
block|}
specifier|public
name|int
name|getLushr
parameter_list|()
block|{
return|return
name|lushr
return|;
block|}
specifier|public
name|void
name|setLushr
parameter_list|(
name|int
name|lushr
parameter_list|)
block|{
name|this
operator|.
name|lushr
operator|=
name|lushr
expr_stmt|;
block|}
specifier|public
name|int
name|getLxor
parameter_list|()
block|{
return|return
name|lxor
return|;
block|}
specifier|public
name|void
name|setLxor
parameter_list|(
name|int
name|lxor
parameter_list|)
block|{
name|this
operator|.
name|lxor
operator|=
name|lxor
expr_stmt|;
block|}
specifier|public
name|int
name|getMonitorenter
parameter_list|()
block|{
return|return
name|monitorenter
return|;
block|}
specifier|public
name|void
name|setMonitorenter
parameter_list|(
name|int
name|monitorenter
parameter_list|)
block|{
name|this
operator|.
name|monitorenter
operator|=
name|monitorenter
expr_stmt|;
block|}
specifier|public
name|int
name|getMonitorexit
parameter_list|()
block|{
return|return
name|monitorexit
return|;
block|}
specifier|public
name|void
name|setMonitorexit
parameter_list|(
name|int
name|monitorexit
parameter_list|)
block|{
name|this
operator|.
name|monitorexit
operator|=
name|monitorexit
expr_stmt|;
block|}
specifier|public
name|int
name|getMultianewarray
parameter_list|()
block|{
return|return
name|multianewarray
return|;
block|}
specifier|public
name|void
name|setMultianewarray
parameter_list|(
name|int
name|multianewarray
parameter_list|)
block|{
name|this
operator|.
name|multianewarray
operator|=
name|multianewarray
expr_stmt|;
block|}
specifier|public
name|int
name|getnEW
parameter_list|()
block|{
return|return
name|nEW
return|;
block|}
specifier|public
name|void
name|setnEW
parameter_list|(
name|int
name|nEW
parameter_list|)
block|{
name|this
operator|.
name|nEW
operator|=
name|nEW
expr_stmt|;
block|}
specifier|public
name|int
name|getNewarray
parameter_list|()
block|{
return|return
name|newarray
return|;
block|}
specifier|public
name|void
name|setNewarray
parameter_list|(
name|int
name|newarray
parameter_list|)
block|{
name|this
operator|.
name|newarray
operator|=
name|newarray
expr_stmt|;
block|}
specifier|public
name|int
name|getNop
parameter_list|()
block|{
return|return
name|nop
return|;
block|}
specifier|public
name|void
name|setNop
parameter_list|(
name|int
name|nop
parameter_list|)
block|{
name|this
operator|.
name|nop
operator|=
name|nop
expr_stmt|;
block|}
specifier|public
name|int
name|getPop
parameter_list|()
block|{
return|return
name|pop
return|;
block|}
specifier|public
name|void
name|setPop
parameter_list|(
name|int
name|pop
parameter_list|)
block|{
name|this
operator|.
name|pop
operator|=
name|pop
expr_stmt|;
block|}
specifier|public
name|int
name|getPop2
parameter_list|()
block|{
return|return
name|pop2
return|;
block|}
specifier|public
name|void
name|setPop2
parameter_list|(
name|int
name|pop2
parameter_list|)
block|{
name|this
operator|.
name|pop2
operator|=
name|pop2
expr_stmt|;
block|}
specifier|public
name|int
name|getPopInstruction
parameter_list|()
block|{
return|return
name|popInstruction
return|;
block|}
specifier|public
name|void
name|setPopInstruction
parameter_list|(
name|int
name|popInstruction
parameter_list|)
block|{
name|this
operator|.
name|popInstruction
operator|=
name|popInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getPushInstruction
parameter_list|()
block|{
return|return
name|pushInstruction
return|;
block|}
specifier|public
name|void
name|setPushInstruction
parameter_list|(
name|int
name|pushInstruction
parameter_list|)
block|{
name|this
operator|.
name|pushInstruction
operator|=
name|pushInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getPutfield
parameter_list|()
block|{
return|return
name|putfield
return|;
block|}
specifier|public
name|void
name|setPutfield
parameter_list|(
name|int
name|putfield
parameter_list|)
block|{
name|this
operator|.
name|putfield
operator|=
name|putfield
expr_stmt|;
block|}
specifier|public
name|int
name|getPutstatic
parameter_list|()
block|{
return|return
name|putstatic
return|;
block|}
specifier|public
name|void
name|setPutstatic
parameter_list|(
name|int
name|putstatic
parameter_list|)
block|{
name|this
operator|.
name|putstatic
operator|=
name|putstatic
expr_stmt|;
block|}
specifier|public
name|int
name|getRet
parameter_list|()
block|{
return|return
name|ret
return|;
block|}
specifier|public
name|void
name|setRet
parameter_list|(
name|int
name|ret
parameter_list|)
block|{
name|this
operator|.
name|ret
operator|=
name|ret
expr_stmt|;
block|}
specifier|public
name|int
name|getrETURN
parameter_list|()
block|{
return|return
name|rETURN
return|;
block|}
specifier|public
name|void
name|setrETURN
parameter_list|(
name|int
name|rETURN
parameter_list|)
block|{
name|this
operator|.
name|rETURN
operator|=
name|rETURN
expr_stmt|;
block|}
specifier|public
name|int
name|getReturnInstruction
parameter_list|()
block|{
return|return
name|returnInstruction
return|;
block|}
specifier|public
name|void
name|setReturnInstruction
parameter_list|(
name|int
name|returnInstruction
parameter_list|)
block|{
name|this
operator|.
name|returnInstruction
operator|=
name|returnInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getSaload
parameter_list|()
block|{
return|return
name|saload
return|;
block|}
specifier|public
name|void
name|setSaload
parameter_list|(
name|int
name|saload
parameter_list|)
block|{
name|this
operator|.
name|saload
operator|=
name|saload
expr_stmt|;
block|}
specifier|public
name|int
name|getSastore
parameter_list|()
block|{
return|return
name|sastore
return|;
block|}
specifier|public
name|void
name|setSastore
parameter_list|(
name|int
name|sastore
parameter_list|)
block|{
name|this
operator|.
name|sastore
operator|=
name|sastore
expr_stmt|;
block|}
specifier|public
name|int
name|getSelect
parameter_list|()
block|{
return|return
name|select
return|;
block|}
specifier|public
name|void
name|setSelect
parameter_list|(
name|int
name|select
parameter_list|)
block|{
name|this
operator|.
name|select
operator|=
name|select
expr_stmt|;
block|}
specifier|public
name|int
name|getSipush
parameter_list|()
block|{
return|return
name|sipush
return|;
block|}
specifier|public
name|void
name|setSipush
parameter_list|(
name|int
name|sipush
parameter_list|)
block|{
name|this
operator|.
name|sipush
operator|=
name|sipush
expr_stmt|;
block|}
specifier|public
name|int
name|getStackConsumer
parameter_list|()
block|{
return|return
name|stackConsumer
return|;
block|}
specifier|public
name|void
name|setStackConsumer
parameter_list|(
name|int
name|stackConsumer
parameter_list|)
block|{
name|this
operator|.
name|stackConsumer
operator|=
name|stackConsumer
expr_stmt|;
block|}
specifier|public
name|int
name|getStackInstruction
parameter_list|()
block|{
return|return
name|stackInstruction
return|;
block|}
specifier|public
name|void
name|setStackInstruction
parameter_list|(
name|int
name|stackInstruction
parameter_list|)
block|{
name|this
operator|.
name|stackInstruction
operator|=
name|stackInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getStackProducer
parameter_list|()
block|{
return|return
name|stackProducer
return|;
block|}
specifier|public
name|void
name|setStackProducer
parameter_list|(
name|int
name|stackProducer
parameter_list|)
block|{
name|this
operator|.
name|stackProducer
operator|=
name|stackProducer
expr_stmt|;
block|}
specifier|public
name|int
name|getStoreInstruction
parameter_list|()
block|{
return|return
name|storeInstruction
return|;
block|}
specifier|public
name|void
name|setStoreInstruction
parameter_list|(
name|int
name|storeInstruction
parameter_list|)
block|{
name|this
operator|.
name|storeInstruction
operator|=
name|storeInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getSwap
parameter_list|()
block|{
return|return
name|swap
return|;
block|}
specifier|public
name|void
name|setSwap
parameter_list|(
name|int
name|swap
parameter_list|)
block|{
name|this
operator|.
name|swap
operator|=
name|swap
expr_stmt|;
block|}
specifier|public
name|int
name|getTableswitch
parameter_list|()
block|{
return|return
name|tableswitch
return|;
block|}
specifier|public
name|void
name|setTableswitch
parameter_list|(
name|int
name|tableswitch
parameter_list|)
block|{
name|this
operator|.
name|tableswitch
operator|=
name|tableswitch
expr_stmt|;
block|}
specifier|public
name|int
name|getTypedInstruction
parameter_list|()
block|{
return|return
name|typedInstruction
return|;
block|}
specifier|public
name|void
name|setTypedInstruction
parameter_list|(
name|int
name|typedInstruction
parameter_list|)
block|{
name|this
operator|.
name|typedInstruction
operator|=
name|typedInstruction
expr_stmt|;
block|}
specifier|public
name|int
name|getUnconditionalBranch
parameter_list|()
block|{
return|return
name|unconditionalBranch
return|;
block|}
specifier|public
name|void
name|setUnconditionalBranch
parameter_list|(
name|int
name|unconditionalBranch
parameter_list|)
block|{
name|this
operator|.
name|unconditionalBranch
operator|=
name|unconditionalBranch
expr_stmt|;
block|}
specifier|public
name|int
name|getVariableLengthInstruction
parameter_list|()
block|{
return|return
name|variableLengthInstruction
return|;
block|}
specifier|public
name|void
name|setVariableLengthInstruction
parameter_list|(
name|int
name|variableLengthInstruction
parameter_list|)
block|{
name|this
operator|.
name|variableLengthInstruction
operator|=
name|variableLengthInstruction
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitAALOAD
parameter_list|(
name|AALOAD
name|obj
parameter_list|)
block|{
name|aaload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitAASTORE
parameter_list|(
name|AASTORE
name|obj
parameter_list|)
block|{
name|aastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitACONST_NULL
parameter_list|(
name|ACONST_NULL
name|obj
parameter_list|)
block|{
name|aconstNull
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitAllocationInstruction
parameter_list|(
name|AllocationInstruction
name|obj
parameter_list|)
block|{
name|allocationInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitALOAD
parameter_list|(
name|ALOAD
name|obj
parameter_list|)
block|{
name|aload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitANEWARRAY
parameter_list|(
name|ANEWARRAY
name|obj
parameter_list|)
block|{
name|anewarray
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitARETURN
parameter_list|(
name|ARETURN
name|obj
parameter_list|)
block|{
name|areturn
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitArithmeticInstruction
parameter_list|(
name|ArithmeticInstruction
name|obj
parameter_list|)
block|{
name|arithmeticInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitArrayInstruction
parameter_list|(
name|ArrayInstruction
name|obj
parameter_list|)
block|{
name|arrayInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitARRAYLENGTH
parameter_list|(
name|ARRAYLENGTH
name|obj
parameter_list|)
block|{
name|arraylength
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitASTORE
parameter_list|(
name|ASTORE
name|obj
parameter_list|)
block|{
name|astore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitATHROW
parameter_list|(
name|ATHROW
name|obj
parameter_list|)
block|{
name|athrow
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitBALOAD
parameter_list|(
name|BALOAD
name|obj
parameter_list|)
block|{
name|baload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitBASTORE
parameter_list|(
name|BASTORE
name|obj
parameter_list|)
block|{
name|bastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitBIPUSH
parameter_list|(
name|BIPUSH
name|obj
parameter_list|)
block|{
name|bipush
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitBranchInstruction
parameter_list|(
name|BranchInstruction
name|obj
parameter_list|)
block|{
name|branchInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitBREAKPOINT
parameter_list|(
name|BREAKPOINT
name|obj
parameter_list|)
block|{
name|breakpoint
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCALOAD
parameter_list|(
name|CALOAD
name|obj
parameter_list|)
block|{
name|caload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCASTORE
parameter_list|(
name|CASTORE
name|obj
parameter_list|)
block|{
name|castore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCHECKCAST
parameter_list|(
name|CHECKCAST
name|obj
parameter_list|)
block|{
name|checkcast
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantPushInstruction
parameter_list|(
name|ConstantPushInstruction
name|obj
parameter_list|)
block|{
name|constantPushInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConversionInstruction
parameter_list|(
name|ConversionInstruction
name|obj
parameter_list|)
block|{
name|conversionInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCPInstruction
parameter_list|(
name|CPInstruction
name|obj
parameter_list|)
block|{
name|cpInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitD2F
parameter_list|(
name|D2F
name|obj
parameter_list|)
block|{
name|d2F
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitD2I
parameter_list|(
name|D2I
name|obj
parameter_list|)
block|{
name|d2I
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitD2L
parameter_list|(
name|D2L
name|obj
parameter_list|)
block|{
name|d2L
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDADD
parameter_list|(
name|DADD
name|obj
parameter_list|)
block|{
name|dadd
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDALOAD
parameter_list|(
name|DALOAD
name|obj
parameter_list|)
block|{
name|daload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDASTORE
parameter_list|(
name|DASTORE
name|obj
parameter_list|)
block|{
name|dastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDCMPG
parameter_list|(
name|DCMPG
name|obj
parameter_list|)
block|{
name|dcmpg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDCMPL
parameter_list|(
name|DCMPL
name|obj
parameter_list|)
block|{
name|dcmpl
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDCONST
parameter_list|(
name|DCONST
name|obj
parameter_list|)
block|{
name|dconst
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDDIV
parameter_list|(
name|DDIV
name|obj
parameter_list|)
block|{
name|ddiv
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDLOAD
parameter_list|(
name|DLOAD
name|obj
parameter_list|)
block|{
name|dload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDMUL
parameter_list|(
name|DMUL
name|obj
parameter_list|)
block|{
name|dmul
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDNEG
parameter_list|(
name|DNEG
name|obj
parameter_list|)
block|{
name|dneg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDREM
parameter_list|(
name|DREM
name|obj
parameter_list|)
block|{
name|drem
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDRETURN
parameter_list|(
name|DRETURN
name|obj
parameter_list|)
block|{
name|dreturn
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDSTORE
parameter_list|(
name|DSTORE
name|obj
parameter_list|)
block|{
name|dstore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDSUB
parameter_list|(
name|DSUB
name|obj
parameter_list|)
block|{
name|dsub
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP
parameter_list|(
name|DUP
name|obj
parameter_list|)
block|{
name|dup
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP_X1
parameter_list|(
name|DUP_X1
name|obj
parameter_list|)
block|{
name|dupX1
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP_X2
parameter_list|(
name|DUP_X2
name|obj
parameter_list|)
block|{
name|dupX2
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP2
parameter_list|(
name|DUP2
name|obj
parameter_list|)
block|{
name|dup2
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP2_X1
parameter_list|(
name|DUP2_X1
name|obj
parameter_list|)
block|{
name|dup2X1
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDUP2_X2
parameter_list|(
name|DUP2_X2
name|obj
parameter_list|)
block|{
name|dup2X2
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitExceptionThrower
parameter_list|(
name|ExceptionThrower
name|obj
parameter_list|)
block|{
name|exceptionThrower
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitF2D
parameter_list|(
name|F2D
name|obj
parameter_list|)
block|{
name|f2D
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitF2I
parameter_list|(
name|F2I
name|obj
parameter_list|)
block|{
name|f2I
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitF2L
parameter_list|(
name|F2L
name|obj
parameter_list|)
block|{
name|f2L
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFADD
parameter_list|(
name|FADD
name|obj
parameter_list|)
block|{
name|fadd
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFALOAD
parameter_list|(
name|FALOAD
name|obj
parameter_list|)
block|{
name|faload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFASTORE
parameter_list|(
name|FASTORE
name|obj
parameter_list|)
block|{
name|fastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFCMPG
parameter_list|(
name|FCMPG
name|obj
parameter_list|)
block|{
name|fcmpg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFCMPL
parameter_list|(
name|FCMPL
name|obj
parameter_list|)
block|{
name|fcmpl
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFCONST
parameter_list|(
name|FCONST
name|obj
parameter_list|)
block|{
name|fconst
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFDIV
parameter_list|(
name|FDIV
name|obj
parameter_list|)
block|{
name|fdiv
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFieldInstruction
parameter_list|(
name|FieldInstruction
name|obj
parameter_list|)
block|{
name|fieldInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFieldOrMethod
parameter_list|(
name|FieldOrMethod
name|obj
parameter_list|)
block|{
name|fieldOrMethod
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFLOAD
parameter_list|(
name|FLOAD
name|obj
parameter_list|)
block|{
name|fload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFMUL
parameter_list|(
name|FMUL
name|obj
parameter_list|)
block|{
name|fmul
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFNEG
parameter_list|(
name|FNEG
name|obj
parameter_list|)
block|{
name|fneg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFREM
parameter_list|(
name|FREM
name|obj
parameter_list|)
block|{
name|frem
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFRETURN
parameter_list|(
name|FRETURN
name|obj
parameter_list|)
block|{
name|freturn
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFSTORE
parameter_list|(
name|FSTORE
name|obj
parameter_list|)
block|{
name|fstore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitFSUB
parameter_list|(
name|FSUB
name|obj
parameter_list|)
block|{
name|fsub
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitGETFIELD
parameter_list|(
name|GETFIELD
name|obj
parameter_list|)
block|{
name|getfield
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitGETSTATIC
parameter_list|(
name|GETSTATIC
name|obj
parameter_list|)
block|{
name|getstatic
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitGOTO
parameter_list|(
name|GOTO
name|obj
parameter_list|)
block|{
name|goTo
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitGOTO_W
parameter_list|(
name|GOTO_W
name|obj
parameter_list|)
block|{
name|gotoW
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitGotoInstruction
parameter_list|(
name|GotoInstruction
name|obj
parameter_list|)
block|{
name|gotoInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2B
parameter_list|(
name|I2B
name|obj
parameter_list|)
block|{
name|i2B
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2C
parameter_list|(
name|I2C
name|obj
parameter_list|)
block|{
name|i2C
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2D
parameter_list|(
name|I2D
name|obj
parameter_list|)
block|{
name|i2D
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2F
parameter_list|(
name|I2F
name|obj
parameter_list|)
block|{
name|i2F
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2L
parameter_list|(
name|I2L
name|obj
parameter_list|)
block|{
name|i2L
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitI2S
parameter_list|(
name|I2S
name|obj
parameter_list|)
block|{
name|i2S
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIADD
parameter_list|(
name|IADD
name|obj
parameter_list|)
block|{
name|iadd
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIALOAD
parameter_list|(
name|IALOAD
name|obj
parameter_list|)
block|{
name|iaload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIAND
parameter_list|(
name|IAND
name|obj
parameter_list|)
block|{
name|iand
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIASTORE
parameter_list|(
name|IASTORE
name|obj
parameter_list|)
block|{
name|iastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitICONST
parameter_list|(
name|ICONST
name|obj
parameter_list|)
block|{
name|iconst
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIDIV
parameter_list|(
name|IDIV
name|obj
parameter_list|)
block|{
name|idiv
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ACMPEQ
parameter_list|(
name|IF_ACMPEQ
name|obj
parameter_list|)
block|{
name|ifAcmpeq
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ACMPNE
parameter_list|(
name|IF_ACMPNE
name|obj
parameter_list|)
block|{
name|ifAcmpne
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPEQ
parameter_list|(
name|IF_ICMPEQ
name|obj
parameter_list|)
block|{
name|ifIcmpeq
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPGE
parameter_list|(
name|IF_ICMPGE
name|obj
parameter_list|)
block|{
name|ifIcmpge
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPGT
parameter_list|(
name|IF_ICMPGT
name|obj
parameter_list|)
block|{
name|ifIcmpgt
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPLE
parameter_list|(
name|IF_ICMPLE
name|obj
parameter_list|)
block|{
name|ifIcmple
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPLT
parameter_list|(
name|IF_ICMPLT
name|obj
parameter_list|)
block|{
name|ifIcmplt
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIF_ICMPNE
parameter_list|(
name|IF_ICMPNE
name|obj
parameter_list|)
block|{
name|ifIcmpne
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFEQ
parameter_list|(
name|IFEQ
name|obj
parameter_list|)
block|{
name|ifeq
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFGE
parameter_list|(
name|IFGE
name|obj
parameter_list|)
block|{
name|ifge
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFGT
parameter_list|(
name|IFGT
name|obj
parameter_list|)
block|{
name|ifgt
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIfInstruction
parameter_list|(
name|IfInstruction
name|obj
parameter_list|)
block|{
name|ifInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFLE
parameter_list|(
name|IFLE
name|obj
parameter_list|)
block|{
name|ifle
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFLT
parameter_list|(
name|IFLT
name|obj
parameter_list|)
block|{
name|iflt
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFNE
parameter_list|(
name|IFNE
name|obj
parameter_list|)
block|{
name|ifne
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFNONNULL
parameter_list|(
name|IFNONNULL
name|obj
parameter_list|)
block|{
name|ifnonnull
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIFNULL
parameter_list|(
name|IFNULL
name|obj
parameter_list|)
block|{
name|ifnull
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIINC
parameter_list|(
name|IINC
name|obj
parameter_list|)
block|{
name|iinc
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitILOAD
parameter_list|(
name|ILOAD
name|obj
parameter_list|)
block|{
name|iload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIMPDEP1
parameter_list|(
name|IMPDEP1
name|obj
parameter_list|)
block|{
name|impdep1
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIMPDEP2
parameter_list|(
name|IMPDEP2
name|obj
parameter_list|)
block|{
name|impdep2
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIMUL
parameter_list|(
name|IMUL
name|obj
parameter_list|)
block|{
name|imul
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINEG
parameter_list|(
name|INEG
name|obj
parameter_list|)
block|{
name|ineg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINSTANCEOF
parameter_list|(
name|INSTANCEOF
name|obj
parameter_list|)
block|{
name|instanceOf
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINVOKEDYNAMIC
parameter_list|(
name|INVOKEDYNAMIC
name|obj
parameter_list|)
block|{
name|invokedynamic
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitInvokeInstruction
parameter_list|(
name|InvokeInstruction
name|obj
parameter_list|)
block|{
name|invokeInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINVOKEINTERFACE
parameter_list|(
name|INVOKEINTERFACE
name|obj
parameter_list|)
block|{
name|invokeinterface
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINVOKESPECIAL
parameter_list|(
name|INVOKESPECIAL
name|obj
parameter_list|)
block|{
name|invokespecial
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINVOKESTATIC
parameter_list|(
name|INVOKESTATIC
name|obj
parameter_list|)
block|{
name|invokestatic
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitINVOKEVIRTUAL
parameter_list|(
name|INVOKEVIRTUAL
name|obj
parameter_list|)
block|{
name|invokevirtual
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIOR
parameter_list|(
name|IOR
name|obj
parameter_list|)
block|{
name|ior
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIREM
parameter_list|(
name|IREM
name|obj
parameter_list|)
block|{
name|irem
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIRETURN
parameter_list|(
name|IRETURN
name|obj
parameter_list|)
block|{
name|ireturn
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitISHL
parameter_list|(
name|ISHL
name|obj
parameter_list|)
block|{
name|ishl
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitISHR
parameter_list|(
name|ISHR
name|obj
parameter_list|)
block|{
name|ishr
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitISTORE
parameter_list|(
name|ISTORE
name|obj
parameter_list|)
block|{
name|istore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitISUB
parameter_list|(
name|ISUB
name|obj
parameter_list|)
block|{
name|isub
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIUSHR
parameter_list|(
name|IUSHR
name|obj
parameter_list|)
block|{
name|iushr
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitIXOR
parameter_list|(
name|IXOR
name|obj
parameter_list|)
block|{
name|ixor
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitJSR
parameter_list|(
name|JSR
name|obj
parameter_list|)
block|{
name|jsr
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitJSR_W
parameter_list|(
name|JSR_W
name|obj
parameter_list|)
block|{
name|jsrW
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitJsrInstruction
parameter_list|(
name|JsrInstruction
name|obj
parameter_list|)
block|{
name|jsrInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitL2D
parameter_list|(
name|L2D
name|obj
parameter_list|)
block|{
name|l2D
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitL2F
parameter_list|(
name|L2F
name|obj
parameter_list|)
block|{
name|l2F
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitL2I
parameter_list|(
name|L2I
name|obj
parameter_list|)
block|{
name|l2I
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLADD
parameter_list|(
name|LADD
name|obj
parameter_list|)
block|{
name|ladd
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLALOAD
parameter_list|(
name|LALOAD
name|obj
parameter_list|)
block|{
name|laload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLAND
parameter_list|(
name|LAND
name|obj
parameter_list|)
block|{
name|land
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLASTORE
parameter_list|(
name|LASTORE
name|obj
parameter_list|)
block|{
name|lastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLCMP
parameter_list|(
name|LCMP
name|obj
parameter_list|)
block|{
name|lcmp
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLCONST
parameter_list|(
name|LCONST
name|obj
parameter_list|)
block|{
name|lconst
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLDC
parameter_list|(
name|LDC
name|obj
parameter_list|)
block|{
name|ldc
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLDC2_W
parameter_list|(
name|LDC2_W
name|obj
parameter_list|)
block|{
name|ldc2W
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLDIV
parameter_list|(
name|LDIV
name|obj
parameter_list|)
block|{
name|ldiv
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLLOAD
parameter_list|(
name|LLOAD
name|obj
parameter_list|)
block|{
name|lload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLMUL
parameter_list|(
name|LMUL
name|obj
parameter_list|)
block|{
name|lmul
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLNEG
parameter_list|(
name|LNEG
name|obj
parameter_list|)
block|{
name|lneg
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLoadClass
parameter_list|(
name|LoadClass
name|obj
parameter_list|)
block|{
name|loadClass
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLoadInstruction
parameter_list|(
name|LoadInstruction
name|obj
parameter_list|)
block|{
name|loadInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLocalVariableInstruction
parameter_list|(
name|LocalVariableInstruction
name|obj
parameter_list|)
block|{
name|localVariableInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLOOKUPSWITCH
parameter_list|(
name|LOOKUPSWITCH
name|obj
parameter_list|)
block|{
name|lookupswitch
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLOR
parameter_list|(
name|LOR
name|obj
parameter_list|)
block|{
name|lor
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLREM
parameter_list|(
name|LREM
name|obj
parameter_list|)
block|{
name|lrem
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLRETURN
parameter_list|(
name|LRETURN
name|obj
parameter_list|)
block|{
name|lreturn
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLSHL
parameter_list|(
name|LSHL
name|obj
parameter_list|)
block|{
name|lshl
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLSHR
parameter_list|(
name|LSHR
name|obj
parameter_list|)
block|{
name|lshr
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLSTORE
parameter_list|(
name|LSTORE
name|obj
parameter_list|)
block|{
name|lstore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLSUB
parameter_list|(
name|LSUB
name|obj
parameter_list|)
block|{
name|lsub
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLUSHR
parameter_list|(
name|LUSHR
name|obj
parameter_list|)
block|{
name|lushr
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLXOR
parameter_list|(
name|LXOR
name|obj
parameter_list|)
block|{
name|lxor
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitMONITORENTER
parameter_list|(
name|MONITORENTER
name|obj
parameter_list|)
block|{
name|monitorenter
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitMONITOREXIT
parameter_list|(
name|MONITOREXIT
name|obj
parameter_list|)
block|{
name|monitorexit
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitMULTIANEWARRAY
parameter_list|(
name|MULTIANEWARRAY
name|obj
parameter_list|)
block|{
name|multianewarray
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitNEW
parameter_list|(
name|NEW
name|obj
parameter_list|)
block|{
name|nEW
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitNEWARRAY
parameter_list|(
name|NEWARRAY
name|obj
parameter_list|)
block|{
name|newarray
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitNOP
parameter_list|(
name|NOP
name|obj
parameter_list|)
block|{
name|nop
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPOP
parameter_list|(
name|POP
name|obj
parameter_list|)
block|{
name|pop
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPOP2
parameter_list|(
name|POP2
name|obj
parameter_list|)
block|{
name|pop2
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPopInstruction
parameter_list|(
name|PopInstruction
name|obj
parameter_list|)
block|{
name|popInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPushInstruction
parameter_list|(
name|PushInstruction
name|obj
parameter_list|)
block|{
name|pushInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPUTFIELD
parameter_list|(
name|PUTFIELD
name|obj
parameter_list|)
block|{
name|putfield
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitPUTSTATIC
parameter_list|(
name|PUTSTATIC
name|obj
parameter_list|)
block|{
name|putstatic
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitRET
parameter_list|(
name|RET
name|obj
parameter_list|)
block|{
name|ret
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitRETURN
parameter_list|(
name|RETURN
name|obj
parameter_list|)
block|{
name|rETURN
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitReturnInstruction
parameter_list|(
name|ReturnInstruction
name|obj
parameter_list|)
block|{
name|returnInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSALOAD
parameter_list|(
name|SALOAD
name|obj
parameter_list|)
block|{
name|saload
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSASTORE
parameter_list|(
name|SASTORE
name|obj
parameter_list|)
block|{
name|sastore
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSelect
parameter_list|(
name|Select
name|obj
parameter_list|)
block|{
name|select
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSIPUSH
parameter_list|(
name|SIPUSH
name|obj
parameter_list|)
block|{
name|sipush
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStackConsumer
parameter_list|(
name|StackConsumer
name|obj
parameter_list|)
block|{
name|stackConsumer
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStackInstruction
parameter_list|(
name|StackInstruction
name|obj
parameter_list|)
block|{
name|stackInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStackProducer
parameter_list|(
name|StackProducer
name|obj
parameter_list|)
block|{
name|stackProducer
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStoreInstruction
parameter_list|(
name|StoreInstruction
name|obj
parameter_list|)
block|{
name|storeInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSWAP
parameter_list|(
name|SWAP
name|obj
parameter_list|)
block|{
name|swap
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitTABLESWITCH
parameter_list|(
name|TABLESWITCH
name|obj
parameter_list|)
block|{
name|tableswitch
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitTypedInstruction
parameter_list|(
name|TypedInstruction
name|obj
parameter_list|)
block|{
name|typedInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitUnconditionalBranch
parameter_list|(
name|UnconditionalBranch
name|obj
parameter_list|)
block|{
name|unconditionalBranch
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitVariableLengthInstruction
parameter_list|(
name|VariableLengthInstruction
name|obj
parameter_list|)
block|{
name|variableLengthInstruction
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
return|return
literal|false
return|;
name|CountVisitor
name|that
init|=
operator|(
name|CountVisitor
operator|)
name|o
decl_stmt|;
return|return
name|aaload
operator|==
name|that
operator|.
name|aaload
operator|&&
name|aastore
operator|==
name|that
operator|.
name|aastore
operator|&&
name|aconstNull
operator|==
name|that
operator|.
name|aconstNull
operator|&&
name|allocationInstruction
operator|==
name|that
operator|.
name|allocationInstruction
operator|&&
name|aload
operator|==
name|that
operator|.
name|aload
operator|&&
name|anewarray
operator|==
name|that
operator|.
name|anewarray
operator|&&
name|areturn
operator|==
name|that
operator|.
name|areturn
operator|&&
name|arithmeticInstruction
operator|==
name|that
operator|.
name|arithmeticInstruction
operator|&&
name|arrayInstruction
operator|==
name|that
operator|.
name|arrayInstruction
operator|&&
name|arraylength
operator|==
name|that
operator|.
name|arraylength
operator|&&
name|astore
operator|==
name|that
operator|.
name|astore
operator|&&
name|athrow
operator|==
name|that
operator|.
name|athrow
operator|&&
name|baload
operator|==
name|that
operator|.
name|baload
operator|&&
name|bastore
operator|==
name|that
operator|.
name|bastore
operator|&&
name|bipush
operator|==
name|that
operator|.
name|bipush
operator|&&
name|branchInstruction
operator|==
name|that
operator|.
name|branchInstruction
operator|&&
name|breakpoint
operator|==
name|that
operator|.
name|breakpoint
operator|&&
name|caload
operator|==
name|that
operator|.
name|caload
operator|&&
name|castore
operator|==
name|that
operator|.
name|castore
operator|&&
name|checkcast
operator|==
name|that
operator|.
name|checkcast
operator|&&
name|constantPushInstruction
operator|==
name|that
operator|.
name|constantPushInstruction
operator|&&
name|conversionInstruction
operator|==
name|that
operator|.
name|conversionInstruction
operator|&&
name|cpInstruction
operator|==
name|that
operator|.
name|cpInstruction
operator|&&
name|d2F
operator|==
name|that
operator|.
name|d2F
operator|&&
name|d2I
operator|==
name|that
operator|.
name|d2I
operator|&&
name|d2L
operator|==
name|that
operator|.
name|d2L
operator|&&
name|dadd
operator|==
name|that
operator|.
name|dadd
operator|&&
name|daload
operator|==
name|that
operator|.
name|daload
operator|&&
name|dastore
operator|==
name|that
operator|.
name|dastore
operator|&&
name|dcmpg
operator|==
name|that
operator|.
name|dcmpg
operator|&&
name|dcmpl
operator|==
name|that
operator|.
name|dcmpl
operator|&&
name|dconst
operator|==
name|that
operator|.
name|dconst
operator|&&
name|ddiv
operator|==
name|that
operator|.
name|ddiv
operator|&&
name|dload
operator|==
name|that
operator|.
name|dload
operator|&&
name|dmul
operator|==
name|that
operator|.
name|dmul
operator|&&
name|dneg
operator|==
name|that
operator|.
name|dneg
operator|&&
name|drem
operator|==
name|that
operator|.
name|drem
operator|&&
name|dreturn
operator|==
name|that
operator|.
name|dreturn
operator|&&
name|dstore
operator|==
name|that
operator|.
name|dstore
operator|&&
name|dsub
operator|==
name|that
operator|.
name|dsub
operator|&&
name|dup
operator|==
name|that
operator|.
name|dup
operator|&&
name|dupX1
operator|==
name|that
operator|.
name|dupX1
operator|&&
name|dupX2
operator|==
name|that
operator|.
name|dupX2
operator|&&
name|dup2
operator|==
name|that
operator|.
name|dup2
operator|&&
name|dup2X1
operator|==
name|that
operator|.
name|dup2X1
operator|&&
name|dup2X2
operator|==
name|that
operator|.
name|dup2X2
operator|&&
name|exceptionThrower
operator|==
name|that
operator|.
name|exceptionThrower
operator|&&
name|f2D
operator|==
name|that
operator|.
name|f2D
operator|&&
name|f2I
operator|==
name|that
operator|.
name|f2I
operator|&&
name|f2L
operator|==
name|that
operator|.
name|f2L
operator|&&
name|fadd
operator|==
name|that
operator|.
name|fadd
operator|&&
name|faload
operator|==
name|that
operator|.
name|faload
operator|&&
name|fastore
operator|==
name|that
operator|.
name|fastore
operator|&&
name|fcmpg
operator|==
name|that
operator|.
name|fcmpg
operator|&&
name|fcmpl
operator|==
name|that
operator|.
name|fcmpl
operator|&&
name|fconst
operator|==
name|that
operator|.
name|fconst
operator|&&
name|fdiv
operator|==
name|that
operator|.
name|fdiv
operator|&&
name|fieldInstruction
operator|==
name|that
operator|.
name|fieldInstruction
operator|&&
name|fieldOrMethod
operator|==
name|that
operator|.
name|fieldOrMethod
operator|&&
name|fload
operator|==
name|that
operator|.
name|fload
operator|&&
name|fmul
operator|==
name|that
operator|.
name|fmul
operator|&&
name|fneg
operator|==
name|that
operator|.
name|fneg
operator|&&
name|frem
operator|==
name|that
operator|.
name|frem
operator|&&
name|freturn
operator|==
name|that
operator|.
name|freturn
operator|&&
name|fstore
operator|==
name|that
operator|.
name|fstore
operator|&&
name|fsub
operator|==
name|that
operator|.
name|fsub
operator|&&
name|getfield
operator|==
name|that
operator|.
name|getfield
operator|&&
name|getstatic
operator|==
name|that
operator|.
name|getstatic
operator|&&
name|goTo
operator|==
name|that
operator|.
name|goTo
operator|&&
name|gotoW
operator|==
name|that
operator|.
name|gotoW
operator|&&
name|gotoInstruction
operator|==
name|that
operator|.
name|gotoInstruction
operator|&&
name|i2B
operator|==
name|that
operator|.
name|i2B
operator|&&
name|i2C
operator|==
name|that
operator|.
name|i2C
operator|&&
name|i2D
operator|==
name|that
operator|.
name|i2D
operator|&&
name|i2F
operator|==
name|that
operator|.
name|i2F
operator|&&
name|i2L
operator|==
name|that
operator|.
name|i2L
operator|&&
name|i2S
operator|==
name|that
operator|.
name|i2S
operator|&&
name|iadd
operator|==
name|that
operator|.
name|iadd
operator|&&
name|iaload
operator|==
name|that
operator|.
name|iaload
operator|&&
name|iand
operator|==
name|that
operator|.
name|iand
operator|&&
name|iastore
operator|==
name|that
operator|.
name|iastore
operator|&&
name|iconst
operator|==
name|that
operator|.
name|iconst
operator|&&
name|idiv
operator|==
name|that
operator|.
name|idiv
operator|&&
name|ifAcmpeq
operator|==
name|that
operator|.
name|ifAcmpeq
operator|&&
name|ifAcmpne
operator|==
name|that
operator|.
name|ifAcmpne
operator|&&
name|ifIcmpeq
operator|==
name|that
operator|.
name|ifIcmpeq
operator|&&
name|ifIcmpge
operator|==
name|that
operator|.
name|ifIcmpge
operator|&&
name|ifIcmpgt
operator|==
name|that
operator|.
name|ifIcmpgt
operator|&&
name|ifIcmple
operator|==
name|that
operator|.
name|ifIcmple
operator|&&
name|ifIcmplt
operator|==
name|that
operator|.
name|ifIcmplt
operator|&&
name|ifIcmpne
operator|==
name|that
operator|.
name|ifIcmpne
operator|&&
name|ifeq
operator|==
name|that
operator|.
name|ifeq
operator|&&
name|ifge
operator|==
name|that
operator|.
name|ifge
operator|&&
name|ifgt
operator|==
name|that
operator|.
name|ifgt
operator|&&
name|ifInstruction
operator|==
name|that
operator|.
name|ifInstruction
operator|&&
name|ifle
operator|==
name|that
operator|.
name|ifle
operator|&&
name|iflt
operator|==
name|that
operator|.
name|iflt
operator|&&
name|ifne
operator|==
name|that
operator|.
name|ifne
operator|&&
name|ifnonnull
operator|==
name|that
operator|.
name|ifnonnull
operator|&&
name|ifnull
operator|==
name|that
operator|.
name|ifnull
operator|&&
name|iinc
operator|==
name|that
operator|.
name|iinc
operator|&&
name|iload
operator|==
name|that
operator|.
name|iload
operator|&&
name|impdep1
operator|==
name|that
operator|.
name|impdep1
operator|&&
name|impdep2
operator|==
name|that
operator|.
name|impdep2
operator|&&
name|imul
operator|==
name|that
operator|.
name|imul
operator|&&
name|ineg
operator|==
name|that
operator|.
name|ineg
operator|&&
name|instanceOf
operator|==
name|that
operator|.
name|instanceOf
operator|&&
name|invokedynamic
operator|==
name|that
operator|.
name|invokedynamic
operator|&&
name|invokeInstruction
operator|==
name|that
operator|.
name|invokeInstruction
operator|&&
name|invokeinterface
operator|==
name|that
operator|.
name|invokeinterface
operator|&&
name|invokespecial
operator|==
name|that
operator|.
name|invokespecial
operator|&&
name|invokestatic
operator|==
name|that
operator|.
name|invokestatic
operator|&&
name|invokevirtual
operator|==
name|that
operator|.
name|invokevirtual
operator|&&
name|ior
operator|==
name|that
operator|.
name|ior
operator|&&
name|irem
operator|==
name|that
operator|.
name|irem
operator|&&
name|ireturn
operator|==
name|that
operator|.
name|ireturn
operator|&&
name|ishl
operator|==
name|that
operator|.
name|ishl
operator|&&
name|ishr
operator|==
name|that
operator|.
name|ishr
operator|&&
name|istore
operator|==
name|that
operator|.
name|istore
operator|&&
name|isub
operator|==
name|that
operator|.
name|isub
operator|&&
name|iushr
operator|==
name|that
operator|.
name|iushr
operator|&&
name|ixor
operator|==
name|that
operator|.
name|ixor
operator|&&
name|jsr
operator|==
name|that
operator|.
name|jsr
operator|&&
name|jsrW
operator|==
name|that
operator|.
name|jsrW
operator|&&
name|jsrInstruction
operator|==
name|that
operator|.
name|jsrInstruction
operator|&&
name|l2D
operator|==
name|that
operator|.
name|l2D
operator|&&
name|l2F
operator|==
name|that
operator|.
name|l2F
operator|&&
name|l2I
operator|==
name|that
operator|.
name|l2I
operator|&&
name|ladd
operator|==
name|that
operator|.
name|ladd
operator|&&
name|laload
operator|==
name|that
operator|.
name|laload
operator|&&
name|land
operator|==
name|that
operator|.
name|land
operator|&&
name|lastore
operator|==
name|that
operator|.
name|lastore
operator|&&
name|lcmp
operator|==
name|that
operator|.
name|lcmp
operator|&&
name|lconst
operator|==
name|that
operator|.
name|lconst
operator|&&
name|ldc
operator|==
name|that
operator|.
name|ldc
operator|&&
name|ldc2W
operator|==
name|that
operator|.
name|ldc2W
operator|&&
name|ldiv
operator|==
name|that
operator|.
name|ldiv
operator|&&
name|lload
operator|==
name|that
operator|.
name|lload
operator|&&
name|lmul
operator|==
name|that
operator|.
name|lmul
operator|&&
name|lneg
operator|==
name|that
operator|.
name|lneg
operator|&&
name|loadClass
operator|==
name|that
operator|.
name|loadClass
operator|&&
name|loadInstruction
operator|==
name|that
operator|.
name|loadInstruction
operator|&&
name|localVariableInstruction
operator|==
name|that
operator|.
name|localVariableInstruction
operator|&&
name|lookupswitch
operator|==
name|that
operator|.
name|lookupswitch
operator|&&
name|lor
operator|==
name|that
operator|.
name|lor
operator|&&
name|lrem
operator|==
name|that
operator|.
name|lrem
operator|&&
name|lreturn
operator|==
name|that
operator|.
name|lreturn
operator|&&
name|lshl
operator|==
name|that
operator|.
name|lshl
operator|&&
name|lshr
operator|==
name|that
operator|.
name|lshr
operator|&&
name|lstore
operator|==
name|that
operator|.
name|lstore
operator|&&
name|lsub
operator|==
name|that
operator|.
name|lsub
operator|&&
name|lushr
operator|==
name|that
operator|.
name|lushr
operator|&&
name|lxor
operator|==
name|that
operator|.
name|lxor
operator|&&
name|monitorenter
operator|==
name|that
operator|.
name|monitorenter
operator|&&
name|monitorexit
operator|==
name|that
operator|.
name|monitorexit
operator|&&
name|multianewarray
operator|==
name|that
operator|.
name|multianewarray
operator|&&
name|nEW
operator|==
name|that
operator|.
name|nEW
operator|&&
name|newarray
operator|==
name|that
operator|.
name|newarray
operator|&&
name|nop
operator|==
name|that
operator|.
name|nop
operator|&&
name|pop
operator|==
name|that
operator|.
name|pop
operator|&&
name|pop2
operator|==
name|that
operator|.
name|pop2
operator|&&
name|popInstruction
operator|==
name|that
operator|.
name|popInstruction
operator|&&
name|pushInstruction
operator|==
name|that
operator|.
name|pushInstruction
operator|&&
name|putfield
operator|==
name|that
operator|.
name|putfield
operator|&&
name|putstatic
operator|==
name|that
operator|.
name|putstatic
operator|&&
name|ret
operator|==
name|that
operator|.
name|ret
operator|&&
name|rETURN
operator|==
name|that
operator|.
name|rETURN
operator|&&
name|returnInstruction
operator|==
name|that
operator|.
name|returnInstruction
operator|&&
name|saload
operator|==
name|that
operator|.
name|saload
operator|&&
name|sastore
operator|==
name|that
operator|.
name|sastore
operator|&&
name|select
operator|==
name|that
operator|.
name|select
operator|&&
name|sipush
operator|==
name|that
operator|.
name|sipush
operator|&&
name|stackConsumer
operator|==
name|that
operator|.
name|stackConsumer
operator|&&
name|stackInstruction
operator|==
name|that
operator|.
name|stackInstruction
operator|&&
name|stackProducer
operator|==
name|that
operator|.
name|stackProducer
operator|&&
name|storeInstruction
operator|==
name|that
operator|.
name|storeInstruction
operator|&&
name|swap
operator|==
name|that
operator|.
name|swap
operator|&&
name|tableswitch
operator|==
name|that
operator|.
name|tableswitch
operator|&&
name|typedInstruction
operator|==
name|that
operator|.
name|typedInstruction
operator|&&
name|unconditionalBranch
operator|==
name|that
operator|.
name|unconditionalBranch
operator|&&
name|variableLengthInstruction
operator|==
name|that
operator|.
name|variableLengthInstruction
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|aaload
argument_list|,
name|aastore
argument_list|,
name|aconstNull
argument_list|,
name|allocationInstruction
argument_list|,
name|aload
argument_list|,
name|anewarray
argument_list|,
name|areturn
argument_list|,
name|arithmeticInstruction
argument_list|,
name|arrayInstruction
argument_list|,
name|arraylength
argument_list|,
name|astore
argument_list|,
name|athrow
argument_list|,
name|baload
argument_list|,
name|bastore
argument_list|,
name|bipush
argument_list|,
name|branchInstruction
argument_list|,
name|breakpoint
argument_list|,
name|caload
argument_list|,
name|castore
argument_list|,
name|checkcast
argument_list|,
name|constantPushInstruction
argument_list|,
name|conversionInstruction
argument_list|,
name|cpInstruction
argument_list|,
name|d2F
argument_list|,
name|d2I
argument_list|,
name|d2L
argument_list|,
name|dadd
argument_list|,
name|daload
argument_list|,
name|dastore
argument_list|,
name|dcmpg
argument_list|,
name|dcmpl
argument_list|,
name|dconst
argument_list|,
name|ddiv
argument_list|,
name|dload
argument_list|,
name|dmul
argument_list|,
name|dneg
argument_list|,
name|drem
argument_list|,
name|dreturn
argument_list|,
name|dstore
argument_list|,
name|dsub
argument_list|,
name|dup
argument_list|,
name|dupX1
argument_list|,
name|dupX2
argument_list|,
name|dup2
argument_list|,
name|dup2X1
argument_list|,
name|dup2X2
argument_list|,
name|exceptionThrower
argument_list|,
name|f2D
argument_list|,
name|f2I
argument_list|,
name|f2L
argument_list|,
name|fadd
argument_list|,
name|faload
argument_list|,
name|fastore
argument_list|,
name|fcmpg
argument_list|,
name|fcmpl
argument_list|,
name|fconst
argument_list|,
name|fdiv
argument_list|,
name|fieldInstruction
argument_list|,
name|fieldOrMethod
argument_list|,
name|fload
argument_list|,
name|fmul
argument_list|,
name|fneg
argument_list|,
name|frem
argument_list|,
name|freturn
argument_list|,
name|fstore
argument_list|,
name|fsub
argument_list|,
name|getfield
argument_list|,
name|getstatic
argument_list|,
name|goTo
argument_list|,
name|gotoW
argument_list|,
name|gotoInstruction
argument_list|,
name|i2B
argument_list|,
name|i2C
argument_list|,
name|i2D
argument_list|,
name|i2F
argument_list|,
name|i2L
argument_list|,
name|i2S
argument_list|,
name|iadd
argument_list|,
name|iaload
argument_list|,
name|iand
argument_list|,
name|iastore
argument_list|,
name|iconst
argument_list|,
name|idiv
argument_list|,
name|ifAcmpeq
argument_list|,
name|ifAcmpne
argument_list|,
name|ifIcmpeq
argument_list|,
name|ifIcmpge
argument_list|,
name|ifIcmpgt
argument_list|,
name|ifIcmple
argument_list|,
name|ifIcmplt
argument_list|,
name|ifIcmpne
argument_list|,
name|ifeq
argument_list|,
name|ifge
argument_list|,
name|ifgt
argument_list|,
name|ifInstruction
argument_list|,
name|ifle
argument_list|,
name|iflt
argument_list|,
name|ifne
argument_list|,
name|ifnonnull
argument_list|,
name|ifnull
argument_list|,
name|iinc
argument_list|,
name|iload
argument_list|,
name|impdep1
argument_list|,
name|impdep2
argument_list|,
name|imul
argument_list|,
name|ineg
argument_list|,
name|instanceOf
argument_list|,
name|invokedynamic
argument_list|,
name|invokeInstruction
argument_list|,
name|invokeinterface
argument_list|,
name|invokespecial
argument_list|,
name|invokestatic
argument_list|,
name|invokevirtual
argument_list|,
name|ior
argument_list|,
name|irem
argument_list|,
name|ireturn
argument_list|,
name|ishl
argument_list|,
name|ishr
argument_list|,
name|istore
argument_list|,
name|isub
argument_list|,
name|iushr
argument_list|,
name|ixor
argument_list|,
name|jsr
argument_list|,
name|jsrW
argument_list|,
name|jsrInstruction
argument_list|,
name|l2D
argument_list|,
name|l2F
argument_list|,
name|l2I
argument_list|,
name|ladd
argument_list|,
name|laload
argument_list|,
name|land
argument_list|,
name|lastore
argument_list|,
name|lcmp
argument_list|,
name|lconst
argument_list|,
name|ldc
argument_list|,
name|ldc2W
argument_list|,
name|ldiv
argument_list|,
name|lload
argument_list|,
name|lmul
argument_list|,
name|lneg
argument_list|,
name|loadClass
argument_list|,
name|loadInstruction
argument_list|,
name|localVariableInstruction
argument_list|,
name|lookupswitch
argument_list|,
name|lor
argument_list|,
name|lrem
argument_list|,
name|lreturn
argument_list|,
name|lshl
argument_list|,
name|lshr
argument_list|,
name|lstore
argument_list|,
name|lsub
argument_list|,
name|lushr
argument_list|,
name|lxor
argument_list|,
name|monitorenter
argument_list|,
name|monitorexit
argument_list|,
name|multianewarray
argument_list|,
name|nEW
argument_list|,
name|newarray
argument_list|,
name|nop
argument_list|,
name|pop
argument_list|,
name|pop2
argument_list|,
name|popInstruction
argument_list|,
name|pushInstruction
argument_list|,
name|putfield
argument_list|,
name|putstatic
argument_list|,
name|ret
argument_list|,
name|rETURN
argument_list|,
name|returnInstruction
argument_list|,
name|saload
argument_list|,
name|sastore
argument_list|,
name|select
argument_list|,
name|sipush
argument_list|,
name|stackConsumer
argument_list|,
name|stackInstruction
argument_list|,
name|stackProducer
argument_list|,
name|storeInstruction
argument_list|,
name|swap
argument_list|,
name|tableswitch
argument_list|,
name|typedInstruction
argument_list|,
name|unconditionalBranch
argument_list|,
name|variableLengthInstruction
argument_list|)
return|;
block|}
block|}
end_class

end_unit

