begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|visitors
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|AnnotationDefault
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|AnnotationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Annotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|BootstrapMethods
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Code
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|CodeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantDouble
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantDynamic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantFieldref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantFloat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantInterfaceMethodref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantInvokeDynamic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantMethodHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantMethodType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantMethodref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantNameAndType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantPackage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantUtf8
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ConstantValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Deprecated
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|EnclosingMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ExceptionTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|InnerClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|InnerClasses
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|JavaClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|LineNumber
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|LineNumberTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|LocalVariable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|LocalVariableTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|LocalVariableTypeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|MethodParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|MethodParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModuleExports
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModuleMainClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModuleOpens
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModulePackages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModuleProvides
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ModuleRequires
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|NestHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|NestMembers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ParameterAnnotationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|ParameterAnnotations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Signature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|SourceFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|StackMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|StackMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Synthetic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Unknown
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
operator|.
name|Visitor
import|;
end_import

begin_class
specifier|public
class|class
name|CountingVisitor
implements|implements
name|Visitor
block|{
comment|// CHECKSTYLE:OFF (public mutable fields in test code)
specifier|public
name|int
name|unknownCount
decl_stmt|;
specifier|public
name|int
name|syntheticCount
decl_stmt|;
specifier|public
name|int
name|stackMapEntryCount
decl_stmt|;
specifier|public
name|int
name|stackMapCount
decl_stmt|;
specifier|public
name|int
name|sourceFileCount
decl_stmt|;
specifier|public
name|int
name|signatureAnnotationCount
decl_stmt|;
specifier|public
name|int
name|parameterAnnotationCount
decl_stmt|;
specifier|public
name|int
name|methodCount
decl_stmt|;
specifier|public
name|int
name|localVariableTypeTableCount
decl_stmt|;
specifier|public
name|int
name|localVariableTableCount
decl_stmt|;
specifier|public
name|int
name|localVariableCount
decl_stmt|;
specifier|public
name|int
name|lineNumberTableCount
decl_stmt|;
specifier|public
name|int
name|lineNumberCount
decl_stmt|;
specifier|public
name|int
name|javaClassCount
decl_stmt|;
specifier|public
name|int
name|innerClassesCount
decl_stmt|;
specifier|public
name|int
name|innerClassCount
decl_stmt|;
specifier|public
name|int
name|fieldCount
decl_stmt|;
specifier|public
name|int
name|exceptionTableCount
decl_stmt|;
specifier|public
name|int
name|enclosingMethodCount
decl_stmt|;
specifier|public
name|int
name|deprecatedCount
decl_stmt|;
specifier|public
name|int
name|constantValueCount
decl_stmt|;
specifier|public
name|int
name|constantUtf8Count
decl_stmt|;
specifier|public
name|int
name|constantStringCount
decl_stmt|;
specifier|public
name|int
name|constantNameAndTypeCount
decl_stmt|;
specifier|public
name|int
name|constantPoolCount
decl_stmt|;
specifier|public
name|int
name|constantMethodrefCount
decl_stmt|;
specifier|public
name|int
name|constantLongCount
decl_stmt|;
specifier|public
name|int
name|constantIntegerCount
decl_stmt|;
specifier|public
name|int
name|constantInterfaceMethodrefCount
decl_stmt|;
specifier|public
name|int
name|constantFloatCount
decl_stmt|;
specifier|public
name|int
name|constantFieldrefCount
decl_stmt|;
specifier|public
name|int
name|constantClassCount
decl_stmt|;
specifier|public
name|int
name|constantDoubleCount
decl_stmt|;
specifier|public
name|int
name|codeExceptionCount
decl_stmt|;
specifier|public
name|int
name|codeCount
decl_stmt|;
specifier|public
name|int
name|annotationEntryCount
decl_stmt|;
specifier|public
name|int
name|annotationDefaultCount
decl_stmt|;
specifier|public
name|int
name|annotationCount
decl_stmt|;
comment|/** @since 6.0 */
specifier|public
name|int
name|bootstrapMethodsCount
decl_stmt|;
comment|/** @since 6.0 */
specifier|public
name|int
name|methodParameterCount
decl_stmt|;
comment|/** @since 6.0 */
specifier|public
name|int
name|methodParametersCount
decl_stmt|;
comment|/** @since 6.0 */
specifier|public
name|int
name|constantInvokeDynamic
decl_stmt|;
comment|/** @since 6.1 */
specifier|public
name|int
name|constantModuleCount
decl_stmt|;
comment|/** @since 6.1 */
specifier|public
name|int
name|constantPackageCount
decl_stmt|;
comment|/** @since 6.3 */
specifier|public
name|int
name|constantDynamicCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleExportsCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleOpensCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleProvidesCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleRequiresCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|moduleMainClassCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|modulePackagesCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|nestHostCount
decl_stmt|;
comment|/** @since 6.4.0 */
specifier|public
name|int
name|nestMembersCount
decl_stmt|;
comment|// CHECKSTYLE:ON
annotation|@
name|Override
specifier|public
name|void
name|visitAnnotation
parameter_list|(
specifier|final
name|Annotations
name|obj
parameter_list|)
block|{
name|annotationCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitAnnotationDefault
parameter_list|(
specifier|final
name|AnnotationDefault
name|obj
parameter_list|)
block|{
name|annotationDefaultCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitAnnotationEntry
parameter_list|(
specifier|final
name|AnnotationEntry
name|obj
parameter_list|)
block|{
name|annotationEntryCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitBootstrapMethods
parameter_list|(
specifier|final
name|BootstrapMethods
name|obj
parameter_list|)
block|{
name|bootstrapMethodsCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCode
parameter_list|(
specifier|final
name|Code
name|obj
parameter_list|)
block|{
name|codeCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitCodeException
parameter_list|(
specifier|final
name|CodeException
name|obj
parameter_list|)
block|{
name|codeExceptionCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantClass
parameter_list|(
specifier|final
name|ConstantClass
name|obj
parameter_list|)
block|{
name|constantClassCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantDouble
parameter_list|(
specifier|final
name|ConstantDouble
name|obj
parameter_list|)
block|{
name|constantDoubleCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.3 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantDynamic
parameter_list|(
specifier|final
name|ConstantDynamic
name|constantDynamic
parameter_list|)
block|{
name|constantDynamicCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantFieldref
parameter_list|(
specifier|final
name|ConstantFieldref
name|obj
parameter_list|)
block|{
name|constantFieldrefCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantFloat
parameter_list|(
specifier|final
name|ConstantFloat
name|obj
parameter_list|)
block|{
name|constantFloatCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantInteger
parameter_list|(
specifier|final
name|ConstantInteger
name|obj
parameter_list|)
block|{
name|constantIntegerCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantInterfaceMethodref
parameter_list|(
specifier|final
name|ConstantInterfaceMethodref
name|obj
parameter_list|)
block|{
name|constantInterfaceMethodrefCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantInvokeDynamic
parameter_list|(
specifier|final
name|ConstantInvokeDynamic
name|obj
parameter_list|)
block|{
name|constantInvokeDynamic
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantLong
parameter_list|(
specifier|final
name|ConstantLong
name|obj
parameter_list|)
block|{
name|constantLongCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantMethodHandle
parameter_list|(
specifier|final
name|ConstantMethodHandle
name|constantMethodHandle
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantMethodref
parameter_list|(
specifier|final
name|ConstantMethodref
name|obj
parameter_list|)
block|{
name|constantMethodrefCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantMethodType
parameter_list|(
specifier|final
name|ConstantMethodType
name|obj
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
comment|/** @since 6.1 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantModule
parameter_list|(
specifier|final
name|ConstantModule
name|constantModule
parameter_list|)
block|{
name|constantModuleCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantNameAndType
parameter_list|(
specifier|final
name|ConstantNameAndType
name|obj
parameter_list|)
block|{
name|constantNameAndTypeCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.1 */
annotation|@
name|Override
specifier|public
name|void
name|visitConstantPackage
parameter_list|(
specifier|final
name|ConstantPackage
name|constantPackage
parameter_list|)
block|{
name|constantPackageCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantPool
parameter_list|(
specifier|final
name|ConstantPool
name|obj
parameter_list|)
block|{
name|constantPoolCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantString
parameter_list|(
specifier|final
name|ConstantString
name|obj
parameter_list|)
block|{
name|constantStringCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantUtf8
parameter_list|(
specifier|final
name|ConstantUtf8
name|obj
parameter_list|)
block|{
name|constantUtf8Count
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitConstantValue
parameter_list|(
specifier|final
name|ConstantValue
name|obj
parameter_list|)
block|{
name|constantValueCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitDeprecated
parameter_list|(
specifier|final
name|Deprecated
name|obj
parameter_list|)
block|{
name|deprecatedCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitEnclosingMethod
parameter_list|(
specifier|final
name|EnclosingMethod
name|obj
parameter_list|)
block|{
name|enclosingMethodCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitExceptionTable
parameter_list|(
specifier|final
name|ExceptionTable
name|obj
parameter_list|)
block|{
name|exceptionTableCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitField
parameter_list|(
specifier|final
name|Field
name|obj
parameter_list|)
block|{
name|fieldCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitInnerClass
parameter_list|(
specifier|final
name|InnerClass
name|obj
parameter_list|)
block|{
name|innerClassCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitInnerClasses
parameter_list|(
specifier|final
name|InnerClasses
name|obj
parameter_list|)
block|{
name|innerClassesCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitJavaClass
parameter_list|(
specifier|final
name|JavaClass
name|obj
parameter_list|)
block|{
name|javaClassCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLineNumber
parameter_list|(
specifier|final
name|LineNumber
name|obj
parameter_list|)
block|{
name|lineNumberCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLineNumberTable
parameter_list|(
specifier|final
name|LineNumberTable
name|obj
parameter_list|)
block|{
name|lineNumberTableCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLocalVariable
parameter_list|(
specifier|final
name|LocalVariable
name|obj
parameter_list|)
block|{
name|localVariableCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLocalVariableTable
parameter_list|(
specifier|final
name|LocalVariableTable
name|obj
parameter_list|)
block|{
name|localVariableTableCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitLocalVariableTypeTable
parameter_list|(
specifier|final
name|LocalVariableTypeTable
name|obj
parameter_list|)
block|{
name|localVariableTypeTableCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitMethod
parameter_list|(
specifier|final
name|Method
name|obj
parameter_list|)
block|{
name|methodCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitMethodParameter
parameter_list|(
specifier|final
name|MethodParameter
name|obj
parameter_list|)
block|{
name|methodParameterCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitMethodParameters
parameter_list|(
specifier|final
name|MethodParameters
name|obj
parameter_list|)
block|{
name|methodParametersCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModule
parameter_list|(
specifier|final
name|Module
name|obj
parameter_list|)
block|{
name|moduleCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModuleExports
parameter_list|(
specifier|final
name|ModuleExports
name|obj
parameter_list|)
block|{
name|moduleExportsCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModuleMainClass
parameter_list|(
specifier|final
name|ModuleMainClass
name|obj
parameter_list|)
block|{
name|moduleMainClassCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModuleOpens
parameter_list|(
specifier|final
name|ModuleOpens
name|obj
parameter_list|)
block|{
name|moduleOpensCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModulePackages
parameter_list|(
specifier|final
name|ModulePackages
name|obj
parameter_list|)
block|{
name|modulePackagesCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModuleProvides
parameter_list|(
specifier|final
name|ModuleProvides
name|obj
parameter_list|)
block|{
name|moduleProvidesCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitModuleRequires
parameter_list|(
specifier|final
name|ModuleRequires
name|obj
parameter_list|)
block|{
name|moduleRequiresCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitNestHost
parameter_list|(
specifier|final
name|NestHost
name|obj
parameter_list|)
block|{
name|nestHostCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.4.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitNestMembers
parameter_list|(
specifier|final
name|NestMembers
name|obj
parameter_list|)
block|{
name|nestMembersCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitParameterAnnotation
parameter_list|(
specifier|final
name|ParameterAnnotations
name|obj
parameter_list|)
block|{
name|parameterAnnotationCount
operator|++
expr_stmt|;
block|}
comment|/** @since 6.0 */
annotation|@
name|Override
specifier|public
name|void
name|visitParameterAnnotationEntry
parameter_list|(
specifier|final
name|ParameterAnnotationEntry
name|parameterAnnotationEntry
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSignature
parameter_list|(
specifier|final
name|Signature
name|obj
parameter_list|)
block|{
name|signatureAnnotationCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSourceFile
parameter_list|(
specifier|final
name|SourceFile
name|obj
parameter_list|)
block|{
name|sourceFileCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStackMap
parameter_list|(
specifier|final
name|StackMap
name|obj
parameter_list|)
block|{
name|stackMapCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitStackMapEntry
parameter_list|(
specifier|final
name|StackMapEntry
name|obj
parameter_list|)
block|{
name|stackMapEntryCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitSynthetic
parameter_list|(
specifier|final
name|Synthetic
name|obj
parameter_list|)
block|{
name|syntheticCount
operator|++
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|visitUnknown
parameter_list|(
specifier|final
name|Unknown
name|obj
parameter_list|)
block|{
name|unknownCount
operator|++
expr_stmt|;
block|}
block|}
end_class

end_unit

