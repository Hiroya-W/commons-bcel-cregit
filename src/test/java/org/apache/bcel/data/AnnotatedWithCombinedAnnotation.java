begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|data
package|;
end_package

begin_class
annotation|@
name|CombinedAnnotation
argument_list|(
block|{
annotation|@
name|SimpleAnnotation
argument_list|(
name|id
operator|=
literal|4
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|AnnotatedWithCombinedAnnotation
block|{
specifier|public
name|AnnotatedWithCombinedAnnotation
parameter_list|(
name|int
name|param1
parameter_list|,
annotation|@
name|SimpleAnnotation
argument_list|(
name|id
operator|=
literal|42
argument_list|)
name|int
name|param2
parameter_list|)
block|{
block|}
annotation|@
name|CombinedAnnotation
argument_list|(
block|{}
argument_list|)
specifier|public
name|void
name|methodWithArrayOfZeroAnnotations
parameter_list|()
block|{
block|}
annotation|@
name|CombinedAnnotation
argument_list|(
block|{
annotation|@
name|SimpleAnnotation
argument_list|(
name|id
operator|=
literal|1
argument_list|,
name|fruit
operator|=
literal|"apples"
argument_list|)
block|,
annotation|@
name|SimpleAnnotation
argument_list|(
name|id
operator|=
literal|2
argument_list|,
name|fruit
operator|=
literal|"oranges"
argument_list|)
block|}
argument_list|)
specifier|public
name|void
name|methodWithArrayOfTwoAnnotations
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

