begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright  2000-2004 The Apache Software Foundation  *  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**  * an annotation's element value pair  *   * @version $Id: ElementValuePair  * @author<A HREF="mailto:dbrosius@qis.net">D. Brosius</A>  * @since 5.3  */
end_comment

begin_class
specifier|public
class|class
name|ElementValuePair
block|{
specifier|private
name|ElementValue
name|elementValue
decl_stmt|;
specifier|private
name|ConstantPool
name|constantPool
decl_stmt|;
specifier|private
name|int
name|elementNameIndex
decl_stmt|;
specifier|public
name|ElementValuePair
parameter_list|(
name|int
name|elementNameIndex
parameter_list|,
name|ElementValue
name|elementValue
parameter_list|,
name|ConstantPool
name|constantPool
parameter_list|)
block|{
name|this
operator|.
name|elementValue
operator|=
name|elementValue
expr_stmt|;
name|this
operator|.
name|elementNameIndex
operator|=
name|elementNameIndex
expr_stmt|;
name|this
operator|.
name|constantPool
operator|=
name|constantPool
expr_stmt|;
block|}
specifier|public
name|String
name|getNameString
parameter_list|()
block|{
name|ConstantUtf8
name|c
init|=
operator|(
name|ConstantUtf8
operator|)
name|constantPool
operator|.
name|getConstant
argument_list|(
name|elementNameIndex
argument_list|,
name|Constants
operator|.
name|CONSTANT_Utf8
argument_list|)
decl_stmt|;
return|return
name|c
operator|.
name|getBytes
argument_list|()
return|;
block|}
specifier|public
specifier|final
name|ElementValue
name|getValue
parameter_list|()
block|{
return|return
name|elementValue
return|;
block|}
specifier|public
name|int
name|getNameIndex
parameter_list|()
block|{
return|return
name|elementNameIndex
return|;
block|}
specifier|public
name|String
name|toShortString
parameter_list|()
block|{
name|StringBuffer
name|result
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|result
operator|.
name|append
argument_list|(
name|getNameString
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"="
argument_list|)
operator|.
name|append
argument_list|(
name|getValue
argument_list|()
operator|.
name|toShortString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|protected
name|void
name|dump
parameter_list|(
name|DataOutputStream
name|dos
parameter_list|)
throws|throws
name|IOException
block|{
name|dos
operator|.
name|writeShort
argument_list|(
name|elementNameIndex
argument_list|)
expr_stmt|;
comment|// u2 name of the element
name|elementValue
operator|.
name|dump
argument_list|(
name|dos
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

