begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|classfile
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|Constants
import|;
end_import

begin_class
specifier|public
class|class
name|EnumElementValue
extends|extends
name|ElementValue
block|{
comment|// For enum types, these two indices point to the type and value
specifier|private
name|int
name|typeIdx
decl_stmt|;
specifier|private
name|int
name|valueIdx
decl_stmt|;
specifier|public
name|EnumElementValue
parameter_list|(
name|int
name|type
parameter_list|,
name|int
name|typeIdx
parameter_list|,
name|int
name|valueIdx
parameter_list|,
name|ConstantPool
name|cpool
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|cpool
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|!=
name|ENUM_CONSTANT
condition|)
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Only element values of type enum can be built with this ctor - type specified: "
operator|+
name|type
argument_list|)
throw|;
name|this
operator|.
name|typeIdx
operator|=
name|typeIdx
expr_stmt|;
name|this
operator|.
name|valueIdx
operator|=
name|valueIdx
expr_stmt|;
block|}
specifier|public
name|void
name|dump
parameter_list|(
name|DataOutputStream
name|dos
parameter_list|)
throws|throws
name|IOException
block|{
name|dos
operator|.
name|writeByte
argument_list|(
name|type
argument_list|)
expr_stmt|;
comment|// u1 type of value (ENUM_CONSTANT == 'e')
name|dos
operator|.
name|writeShort
argument_list|(
name|typeIdx
argument_list|)
expr_stmt|;
comment|// u2
name|dos
operator|.
name|writeShort
argument_list|(
name|valueIdx
argument_list|)
expr_stmt|;
comment|// u2
block|}
specifier|public
name|String
name|stringifyValue
parameter_list|()
block|{
name|ConstantUtf8
name|cu8
init|=
operator|(
name|ConstantUtf8
operator|)
name|cpool
operator|.
name|getConstant
argument_list|(
name|valueIdx
argument_list|,
name|Constants
operator|.
name|CONSTANT_Utf8
argument_list|)
decl_stmt|;
return|return
name|cu8
operator|.
name|getBytes
argument_list|()
return|;
block|}
specifier|public
name|String
name|getEnumTypeString
parameter_list|()
block|{
name|ConstantUtf8
name|cu8
init|=
operator|(
name|ConstantUtf8
operator|)
name|cpool
operator|.
name|getConstant
argument_list|(
name|typeIdx
argument_list|,
name|Constants
operator|.
name|CONSTANT_Utf8
argument_list|)
decl_stmt|;
return|return
name|cu8
operator|.
name|getBytes
argument_list|()
return|;
comment|// Utility.signatureToString(cu8.getBytes());
block|}
specifier|public
name|String
name|getEnumValueString
parameter_list|()
block|{
name|ConstantUtf8
name|cu8
init|=
operator|(
name|ConstantUtf8
operator|)
name|cpool
operator|.
name|getConstant
argument_list|(
name|valueIdx
argument_list|,
name|Constants
operator|.
name|CONSTANT_Utf8
argument_list|)
decl_stmt|;
return|return
name|cu8
operator|.
name|getBytes
argument_list|()
return|;
block|}
specifier|public
name|int
name|getValueIndex
parameter_list|()
block|{
return|return
name|valueIdx
return|;
block|}
specifier|public
name|int
name|getTypeIndex
parameter_list|()
block|{
return|return
name|typeIdx
return|;
block|}
block|}
end_class

end_unit

