begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
package|;
end_package

begin_comment
comment|/* ====================================================================  * The Apache Software License, Version 1.1  *  * Copyright (c) 2001 The Apache Software Foundation.  All rights  * reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  *  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  *  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in  *    the documentation and/or other materials provided with the  *    distribution.  *  * 3. The end-user documentation included with the redistribution,  *    if any, must include the following acknowledgment:  *       "This product includes software developed by the  *        Apache Software Foundation (http://www.apache.org/)."  *    Alternately, this acknowledgment may appear in the software itself,  *    if and wherever such third-party acknowledgments normally appear.  *  * 4. The names "Apache" and "Apache Software Foundation" and  *    "Apache BCEL" must not be used to endorse or promote products  *    derived from this software without prior written permission. For  *    written permission, please contact apache@apache.org.  *  * 5. Products derived from this software may not be called "Apache",  *    "Apache BCEL", nor may "Apache" appear in their name, without  *    prior written permission of the Apache Software Foundation.  *  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR  * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF  * SUCH DAMAGE.  * ====================================================================  *  * This software consists of voluntary contributions made by many  * individuals on behalf of the Apache Software Foundation.  For more  * information on the Apache Software Foundation, please see  *<http://www.apache.org/>.  */
end_comment

begin_comment
comment|/**  * Exception constants.  *  * @version $Id$  * @author<A HREF="http://www.inf.fu-berlin.de/~ehaase">E. Haase</A>  */
end_comment

begin_interface
specifier|public
interface|interface
name|ExceptionConstants
block|{
comment|/** The mother of all exceptions    */
specifier|public
specifier|static
specifier|final
name|Class
name|THROWABLE
init|=
name|Throwable
operator|.
name|class
decl_stmt|;
comment|/** Super class of any run-time exception    */
specifier|public
specifier|static
specifier|final
name|Class
name|RUNTIME_EXCEPTION
init|=
name|RuntimeException
operator|.
name|class
decl_stmt|;
comment|/** Super class of any linking exception (aka Linkage Error)    */
specifier|public
specifier|static
specifier|final
name|Class
name|LINKING_EXCEPTION
init|=
name|LinkageError
operator|.
name|class
decl_stmt|;
comment|/** Linking Exceptions    */
specifier|public
specifier|static
specifier|final
name|Class
name|CLASS_CIRCULARITY_ERROR
init|=
name|ClassCircularityError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|CLASS_FORMAT_ERROR
init|=
name|ClassFormatError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|EXCEPTION_IN_INITIALIZER_ERROR
init|=
name|ExceptionInInitializerError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|INCOMPATIBLE_CLASS_CHANGE_ERROR
init|=
name|IncompatibleClassChangeError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|ABSTRACT_METHOD_ERROR
init|=
name|AbstractMethodError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|ILLEGAL_ACCESS_ERROR
init|=
name|IllegalAccessError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|INSTANTIATION_ERROR
init|=
name|InstantiationError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|NO_SUCH_FIELD_ERROR
init|=
name|NoSuchFieldError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|NO_SUCH_METHOD_ERROR
init|=
name|NoSuchMethodError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|NO_CLASS_DEF_FOUND_ERROR
init|=
name|NoClassDefFoundError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|UNSATISFIED_LINK_ERROR
init|=
name|UnsatisfiedLinkError
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|VERIFY_ERROR
init|=
name|VerifyError
operator|.
name|class
decl_stmt|;
comment|/* UnsupportedClassVersionError is new in JDK 1.2 */
comment|//public static final Class UnsupportedClassVersionError = UnsupportedClassVersionError.class;
comment|/** Run-Time Exceptions     */
specifier|public
specifier|static
specifier|final
name|Class
name|NULL_POINTER_EXCEPTION
init|=
name|NullPointerException
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|ARRAY_INDEX_OUT_OF_BOUNDS_EXCEPTION
init|=
name|ArrayIndexOutOfBoundsException
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|ARITHMETIC_EXCEPTION
init|=
name|ArithmeticException
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|NEGATIVE_ARRAY_SIZE_EXCEPTION
init|=
name|NegativeArraySizeException
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|CLASS_CAST_EXCEPTION
init|=
name|ClassCastException
operator|.
name|class
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Class
name|ILLEGAL_MONITOR_STATE
init|=
name|IllegalMonitorStateException
operator|.
name|class
decl_stmt|;
comment|/** Pre-defined exception arrays according to chapters 5.1-5.4 of the Java Virtual    * Machine Specification     */
specifier|public
specifier|static
specifier|final
name|Class
index|[]
name|EXCS_CLASS_AND_INTERFACE_RESOLUTION
init|=
block|{
name|NO_CLASS_DEF_FOUND_ERROR
block|,
name|CLASS_FORMAT_ERROR
block|,
name|VERIFY_ERROR
block|,
name|ABSTRACT_METHOD_ERROR
block|,
name|EXCEPTION_IN_INITIALIZER_ERROR
block|,
name|ILLEGAL_ACCESS_ERROR
block|}
decl_stmt|;
comment|// Chapter 5.1
specifier|public
specifier|static
specifier|final
name|Class
index|[]
name|EXCS_FIELD_AND_METHOD_RESOLUTION
init|=
block|{
name|NO_SUCH_FIELD_ERROR
block|,
name|ILLEGAL_ACCESS_ERROR
block|,
name|NO_SUCH_METHOD_ERROR
block|}
decl_stmt|;
comment|// Chapter 5.2
specifier|public
specifier|static
specifier|final
name|Class
index|[]
name|EXCS_INTERFACE_METHOD_RESOLUTION
init|=
operator|new
name|Class
index|[
literal|0
index|]
decl_stmt|;
comment|// Chapter 5.3 (as below)
specifier|public
specifier|static
specifier|final
name|Class
index|[]
name|EXCS_STRING_RESOLUTION
init|=
operator|new
name|Class
index|[
literal|0
index|]
decl_stmt|;
comment|// Chapter 5.4 (no errors but the ones that _always_ could happen! How stupid.)
specifier|public
specifier|static
specifier|final
name|Class
index|[]
name|EXCS_ARRAY_EXCEPTION
init|=
block|{
name|NULL_POINTER_EXCEPTION
block|,
name|ARRAY_INDEX_OUT_OF_BOUNDS_EXCEPTION
block|}
decl_stmt|;
block|}
end_interface

end_unit

