begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright  2000-2004 The Apache Software Foundation  *  *  Licensed under the Apache License, Version 2.0 (the "License");   *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.   *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|verifier
operator|.
name|structurals
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|bcel
operator|.
name|generic
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_comment
comment|/**  * This class allows easy access to ExceptionHandler objects.  *  * @version $Id$  * @author<A HREF="http://www.inf.fu-berlin.de/~ehaase"/>Enver Haase</A>  */
end_comment

begin_class
specifier|public
class|class
name|ExceptionHandlers
block|{
comment|/** 	 * The ExceptionHandler instances. 	 * Key: InstructionHandle objects, Values: HashSet<ExceptionHandler> instances. 	 */
specifier|private
name|Hashtable
name|exceptionhandlers
decl_stmt|;
comment|/** 	 * Constructor. Creates a new ExceptionHandlers instance. 	 */
specifier|public
name|ExceptionHandlers
parameter_list|(
name|MethodGen
name|mg
parameter_list|)
block|{
name|exceptionhandlers
operator|=
operator|new
name|Hashtable
argument_list|()
expr_stmt|;
name|CodeExceptionGen
index|[]
name|cegs
init|=
name|mg
operator|.
name|getExceptionHandlers
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cegs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ExceptionHandler
name|eh
init|=
operator|new
name|ExceptionHandler
argument_list|(
name|cegs
index|[
name|i
index|]
operator|.
name|getCatchType
argument_list|()
argument_list|,
name|cegs
index|[
name|i
index|]
operator|.
name|getHandlerPC
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|InstructionHandle
name|ih
init|=
name|cegs
index|[
name|i
index|]
operator|.
name|getStartPC
argument_list|()
init|;
name|ih
operator|!=
name|cegs
index|[
name|i
index|]
operator|.
name|getEndPC
argument_list|()
operator|.
name|getNext
argument_list|()
condition|;
name|ih
operator|=
name|ih
operator|.
name|getNext
argument_list|()
control|)
block|{
name|HashSet
name|hs
decl_stmt|;
name|hs
operator|=
operator|(
name|HashSet
operator|)
name|exceptionhandlers
operator|.
name|get
argument_list|(
name|ih
argument_list|)
expr_stmt|;
if|if
condition|(
name|hs
operator|==
literal|null
condition|)
block|{
name|hs
operator|=
operator|new
name|HashSet
argument_list|()
expr_stmt|;
name|exceptionhandlers
operator|.
name|put
argument_list|(
name|ih
argument_list|,
name|hs
argument_list|)
expr_stmt|;
block|}
name|hs
operator|.
name|add
argument_list|(
name|eh
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/** 	 * Returns all the ExceptionHandler instances representing exception 	 * handlers that protect the instruction ih. 	 */
specifier|public
name|ExceptionHandler
index|[]
name|getExceptionHandlers
parameter_list|(
name|InstructionHandle
name|ih
parameter_list|)
block|{
name|HashSet
name|hs
init|=
operator|(
name|HashSet
operator|)
name|exceptionhandlers
operator|.
name|get
argument_list|(
name|ih
argument_list|)
decl_stmt|;
if|if
condition|(
name|hs
operator|==
literal|null
condition|)
return|return
operator|new
name|ExceptionHandler
index|[
literal|0
index|]
return|;
else|else
block|{
name|ExceptionHandler
index|[]
name|ret
init|=
operator|new
name|ExceptionHandler
index|[
name|hs
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
return|return
operator|(
name|ExceptionHandler
index|[]
operator|)
operator|(
name|hs
operator|.
name|toArray
argument_list|(
name|ret
argument_list|)
operator|)
return|;
block|}
block|}
block|}
end_class

end_unit

