begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_decl_stmt
name|InstructionList
name|il
init|=
operator|new
name|InstructionList
argument_list|()
decl_stmt|;
end_decl_stmt

begin_expr_stmt
operator|...
name|CodeConstraint
name|constraint
operator|=
operator|new
name|CodeConstraint
argument_list|()
block|{
specifier|public
name|boolean
name|checkCode
parameter_list|(
name|InstructionHandle
index|[]
name|match
parameter_list|)
block|{
name|IfInstruction
name|if1
init|=
operator|(
name|IfInstruction
operator|)
name|match
index|[
literal|0
index|]
operator|.
name|getInstruction
argument_list|()
decl_stmt|;
name|GOTO
name|g
init|=
operator|(
name|GOTO
operator|)
name|match
index|[
literal|2
index|]
operator|.
name|getInstruction
argument_list|()
decl_stmt|;
return|return
operator|(
name|if1
operator|.
name|getTarget
argument_list|()
operator|==
name|match
index|[
literal|3
index|]
operator|)
operator|&&
operator|(
name|g
operator|.
name|getTarget
argument_list|()
operator|==
name|match
index|[
literal|4
index|]
operator|)
return|;
block|}
block|}
expr_stmt|;
end_expr_stmt

begin_decl_stmt
name|FindPattern
name|f
init|=
operator|new
name|FindPattern
argument_list|(
name|il
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|String
name|pat
init|=
literal|"`IfInstruction'`ICONST_0'`GOTO'`ICONST_1'"
operator|+
literal|"`NOP'(`IFEQ'|`IFNE')"
decl_stmt|;
end_decl_stmt

begin_decl_stmt
name|InstructionHandle
index|[]
name|match
decl_stmt|;
end_decl_stmt

begin_for
for|for
control|(
name|InstructionHandle
name|ih
init|=
name|f
operator|.
name|search
argument_list|(
name|pat
argument_list|,
name|constraint
argument_list|)
init|;
name|ih
operator|!=
literal|null
condition|;
name|ih
operator|=
name|f
operator|.
name|search
argument_list|(
name|pat
argument_list|,
name|match
index|[
literal|0
index|]
argument_list|,
name|constraint
argument_list|)
control|)
block|{
name|match
operator|=
name|f
operator|.
name|getMatch
argument_list|()
expr_stmt|;
comment|// Constraint already checked
operator|...
name|match
index|[
literal|0
index|]
operator|.
name|setTarget
argument_list|(
name|match
index|[
literal|5
index|]
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update target
operator|...
try|try
block|{
name|il
operator|.
name|delete
argument_list|(
name|match
index|[
literal|1
index|]
argument_list|,
name|match
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TargetLostException
name|e
parameter_list|)
block|{
operator|...
block|}
block|}
end_for

end_unit

