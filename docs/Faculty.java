begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|Faculty
block|{
specifier|private
specifier|static
name|BufferedReader
name|in
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|System
operator|.
name|in
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|fac
parameter_list|(
name|int
name|n
parameter_list|)
block|{
return|return
operator|(
name|n
operator|==
literal|0
operator|)
condition|?
literal|1
else|:
name|n
operator|*
name|fac
argument_list|(
name|n
operator|-
literal|1
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|readInt
parameter_list|()
block|{
name|int
name|n
init|=
literal|4711
decl_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"Please enter a number> "
argument_list|)
expr_stmt|;
name|n
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|in
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|e1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e2
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|e2
argument_list|)
expr_stmt|;
block|}
return|return
name|n
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|int
name|n
init|=
name|readInt
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Faculty of "
operator|+
name|n
operator|+
literal|" is "
operator|+
name|fac
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

